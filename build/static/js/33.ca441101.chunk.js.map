{"version":3,"sources":["views/pages/LeaveReport/LeaveReport.js"],"names":["styles","bgHeading","background","color","padding","textAlign","btnStyle","border","borderRadius","btnSpacing","display","justifyContent","alignItems","flexDirection","pad_Col","LeaveReport","leaves","setleaves","useState","useEffect","async","fetch","concat","process","method","headers","Authorization","window","localStorage","getItem","redirect","then","response","status","Logout","json","result","console","log","SUCCESS","DATA","catch","error","getAllLeave","columnDefs","useMemo","headerName","field","sortable","filter","floatingFilter","cellRenderer","params","_jsxs","style","children","_jsx","onClick","navigateToEdit","data","className","MdModeEdit","size","marginLeft","deleteLeave","item","id","MdDelete","height","width","AgGridReact","rowData","pagination","paginationPageSize","paginationAutoPageSize","suppressPaginationPanel","animateRows","defaultColDef","resizable"],"mappings":"iGAAA,2DAMA,MAAMA,EAAS,CACbC,UAAW,CACTC,WAAY,UACZC,MAAO,QACPC,QAAS,OACTC,UAAW,UAEbC,SAAU,CACRC,OAAQ,OACRH,QAAS,WACTF,WAAY,UACZC,MAAO,QACPK,aAAc,QAEhBC,WAAY,CACVC,QAAS,OACTC,eAAgB,eAChBC,WAAY,SACZC,cAAe,QAEjBC,QAAS,CACPV,QAAS,OACTC,UAAW,WAiLAU,UA9KKA,KAClB,MAAOC,EAAQC,GAAaC,mBAAS,IAoFrCC,qBAAU,KAnFUC,iBAEZC,MAAM,GAADC,OACNC,2BAAgCD,OAAGC,OAAkC,wBACxE,CACEC,OAAQ,OACRC,QAAS,CACPC,cACE,UAAYC,OAAOC,aAAaC,QAAQ,mBAE5CC,SAAU,WAGXC,MAAMC,IACmB,MAApBA,EAASC,QACVC,OAEIF,EAASG,UAEjBJ,MAAMK,IACLC,QAAQC,IAAIF,GACW,IAAnBA,EAAOG,SACTtB,EAAUmB,EAAOI,KAEjB,IAGHC,OAAOC,IACNL,QAAQC,IAAI,QAASI,EAAM,GAK3B,EAmDJC,EAAa,GACZ,IAEH,MAAMC,EAAaC,mBACjB,IAAM,CACJ,CACEC,WAAY,gBACZC,MAAO,YACPC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,GAElB,CACEJ,WAAY,aACZC,MAAO,sBACPC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,GAElB,CACEJ,WAAY,aACZC,MAAO,qBACPC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,GAElB,CACEJ,WAAY,WACZC,MAAO,mBACPC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,GAElB,CACEJ,WAAY,eACZC,MAAO,cACPC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,GAElB,CACEJ,WAAY,SACZK,aAAeC,GACbC,eAAA,OAAKC,MAAOtD,EAAOS,WAAW8C,SAAA,CAC5BC,cAAA,UACEC,QAASA,IAAMC,eAAeN,EAAOO,MACrCC,UAAU,GACVN,MAAOtD,EAAOM,SAASiD,SAEvBC,cAACK,IAAU,CAACC,KAAM,OAEpBN,cAAA,UACEF,MAAO,IAAKtD,EAAOM,SAAUyD,WAAY,OACzCN,QAASA,IAAMO,YAAYC,KAAKC,IAAIX,SAEpCC,cAACW,IAAQ,CAACL,KAAM,aAM1B,IAEF,OACEN,cAAA,OAAKI,UAAU,mBAAkBL,SAC/BC,cAAA,OACEI,UAAU,kBACVN,MAAO,CAAEc,OAAQ,QAASC,MAAO,QAASd,SAE1CC,cAACc,cAAW,CACV1B,WAAYA,EACZ2B,QAASvD,EACTwD,YAAY,EACZC,mBAAoB,GACpBC,wBAAwB,EACxBC,yBAAyB,EACzBC,aAAa,EACbC,cAAe,CACb7B,UAAU,EACV8B,WAAW,EACX7B,QAAQ,QAIV,C","file":"static/js/33.ca441101.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/styles/ag-grid.css\";\r\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\r\nconst styles = {\r\n  bgHeading: {\r\n    background: \"#10a945\",\r\n    color: \"white\",\r\n    padding: \"30px\",\r\n    textAlign: \"center\",\r\n  },\r\n  btnStyle: {\r\n    border: \"none\",\r\n    padding: \"0px 14px\",\r\n    background: \"#10a945\",\r\n    color: \"white\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  btnSpacing: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"item\",\r\n  },\r\n  pad_Col: {\r\n    padding: \"15px\",\r\n    textAlign: \"center\",\r\n  },\r\n};\r\nconst LeaveReport = () => {\r\n  const [leaves, setleaves] = useState([]);\r\n  const getAllLeave = async () => {\r\n    // setIsLoading(true);\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Leaves/GetAllByFirm`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization:\r\n            \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\"),\r\n        },\r\n        redirect: \"follow\",\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 401) {\r\n          <Logout />;\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        if (result.SUCCESS === 1) {\r\n          setleaves(result.DATA);\r\n        } else {\r\n          //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        // handleOpenSnackbar(\r\n        //   \"Failed to fetch ! Please try Again later.\",\r\n        //   \"error\"\r\n        // );\r\n      });\r\n    // setIsLoading(false);\r\n  };\r\n  //   const editleave = (id) => {\r\n  //     window.location.replace(\"#/MainDashboard/BasicLeave/\" + id);\r\n  //   };\r\n  //   const deleteLeave = async (id) => {\r\n  //     var myHeaders = new Headers();\r\n  //     myHeaders.append(\r\n  //       \"Authorization\",\r\n  //       \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n  //     );\r\n\r\n  //     var formdata = new FormData();\r\n  //     formdata.append(\"id\", id);\r\n\r\n  //     var requestOptions = {\r\n  //       method: \"POST\",\r\n  //       headers: myHeaders,\r\n  //       body: formdata,\r\n  //       redirect: \"follow\",\r\n  //     };\r\n\r\n  //     await fetch(\r\n  //       `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Leaves/DeleteByIdAndFirm`,\r\n  //       requestOptions\r\n  //     )\r\n  //       .then((response) => {\r\n  //         if (response.status === 401) {\r\n  //           <Logout />;\r\n  //         }\r\n  //         return response.json();\r\n  //       })\r\n  //       .then((result) => {\r\n  //         if (result.SUCCESS === 1) {\r\n  //           //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"success\");\r\n\r\n  //           window.location.reload();\r\n  //         } else {\r\n  //           //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"error\");\r\n  //         }\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(\"error\", error);\r\n  //         // handleOpenSnackbar(\r\n  //         //   \"Failed to fetch ! Please try Again later.\",\r\n  //         //   \"error\"\r\n  //         // );\r\n  //       });\r\n  //   };\r\n  useEffect(() => {\r\n    getAllLeave();\r\n  }, []);\r\n\r\n  const columnDefs = useMemo(\r\n    () => [\r\n      {\r\n        headerName: \"Employee Name\",\r\n        field: \"userLabel\",\r\n        sortable: true,\r\n        filter: true,\r\n        floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"Leave Type\",\r\n        field: \"attendanceTypeLabel\",\r\n        sortable: true,\r\n        filter: true,\r\n        floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"Start Date\",\r\n        field: \"startOnDateDisplay\",\r\n        sortable: true,\r\n        filter: true,\r\n        floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"End Date\",\r\n        field: \"endOnDateDisplay\",\r\n        sortable: true,\r\n        filter: true,\r\n        floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"Leave Reason\",\r\n        field: \"leaveReason\",\r\n        sortable: true,\r\n        filter: true,\r\n        floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"Action\",\r\n        cellRenderer: (params) => (\r\n          <div style={styles.btnSpacing}>\r\n            <button\r\n              onClick={() => navigateToEdit(params.data)}\r\n              className=\"\"\r\n              style={styles.btnStyle}\r\n            >\r\n              <MdModeEdit size={20} />\r\n            </button>\r\n            <button\r\n              style={{ ...styles.btnStyle, marginLeft: \"8px\" }}\r\n              onClick={() => deleteLeave(item.id)}\r\n            >\r\n              <MdDelete size={25} />\r\n            </button>\r\n          </div>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <div\r\n        className=\"ag-theme-quartz\"\r\n        style={{ height: \"500px\", width: \"100%\" }}\r\n      >\r\n        <AgGridReact\r\n          columnDefs={columnDefs}\r\n          rowData={leaves}\r\n          pagination={true}\r\n          paginationPageSize={10}\r\n          paginationAutoPageSize={true}\r\n          suppressPaginationPanel={true}\r\n          animateRows={true}\r\n          defaultColDef={{\r\n            sortable: true,\r\n            resizable: true,\r\n            filter: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaveReport;\r\n"],"sourceRoot":""}