{"version":3,"sources":["router/Router.js","utility/context/OnlineContext.js","App.js"],"names":["Router","_ref","allRoutes","useRoutes","OnlineStatusContext","React","createContext","OnlineStatusProvider","children","onlineStatus","setOnlineStatus","useState","useEffect","window","addEventListener","removeEventListener","_jsx","Provider","value","GlobalStyles","createGlobalStyle","_templateObject","_taggedTemplateLiteral","App","setAllRoutes","intl","useIntl","init","setInit","navigation","useContext","IntlContext","useNavigate","layout","useLayout","NavigationService","setNavigation","IntlService","setIntl","initAll","async","_getUserData","onRoutes","routes","getRoutes","getUserData","_id","SC","getCall","url","then","res","_res$data","_res$data$data","_res$data2","_res$data2$data","data","user","localStorage","setItem","JSON","stringify","error","catch","_jsxs","_Fragment","Suspense","fallback","Spinner"],"mappings":"qJAQeA,MAPAC,IAAoB,IAAnB,UAAEC,GAAWD,EAI3B,OAFeE,YAAU,IAAID,GAEhB,E,gCCHf,MAAME,EAAsBC,IAAMC,eAAc,GAEnCC,EAAuBN,IAAmB,IAAlB,SAAEO,GAAUP,EAC/C,MAAOQ,EAAcC,GAAmBC,oBAAS,GAoBjD,OAlBAC,qBAAU,KACRC,OAAOC,iBAAiB,WAAW,KACjCJ,GAAgB,EAAM,IAExBG,OAAOC,iBAAiB,UAAU,KAChCJ,GAAgB,EAAK,IAGhB,KACLG,OAAOE,oBAAoB,WAAW,KACpCL,GAAgB,EAAM,IAExBG,OAAOE,oBAAoB,UAAU,KACnCL,GAAgB,EAAK,GACrB,IAEH,IAGDM,cAACZ,EAAoBa,SAAQ,CAACC,MAAOT,EAAaD,SAC/CA,GAC4B,E,0DCLnC,MAAMW,EAAeC,4BAAiBC,MAAAC,YAAA,iMA8EvBC,UAtEHA,KACV,MAAOrB,EAAWsB,GAAgBb,mBAAS,IACrCc,EAAOC,eACNC,EAAMC,GAAWjB,oBAAS,GAE3BkB,GADcC,qBAAWC,KACZC,gBAKb,OAAEC,GAAWC,cAEnBtB,qBAAU,KACRuB,IAAkBC,cAAcP,EAAW,GAC1C,CAACA,IAEJjB,qBAAU,KACRyB,IAAYC,QAAQb,EAAK,GACxB,CAACA,IAEJb,qBAAU,KACR2B,GAAS,GACR,IAEH,MAAMA,EAAUC,UACdZ,GAAQ,EAAK,EA+Bf,OA5BAhB,qBAAU,KAAO,IAAD6B,EACd,IAAIC,EAAWF,UACb,IAAIG,QAAeC,YAAUX,GAC7BT,EAAa,IAAImB,GAAQ,EAGV,QAAjBF,EAAII,qBAAa,IAAAJ,GAAbA,EAAeK,IACjBC,IAAGC,QAAQ,CAAEC,IAAK,UACfC,MAAMC,IACL,IAAK,IAADC,EAAAC,EACyCC,EAAAC,EAA3C,GAAO,OAAHJ,QAAG,IAAHA,KAAKK,MAAW,OAAHL,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKK,YAAI,IAAAJ,GAAM,QAANC,EAATD,EAAWI,YAAI,IAAAH,GAAfA,EAAiBI,KAAK,GACrCC,aAAaC,QACX,WACAC,KAAKC,UAAa,OAAHV,QAAG,IAAHA,GAAS,QAANG,EAAHH,EAAKK,YAAI,IAAAF,GAAM,QAANC,EAATD,EAAWE,YAAI,IAAAD,OAAZ,EAAHA,EAAiBE,KAAK,IAG3C,CAAE,MAAOK,GAAQ,CAEjBpB,GAAU,IAEXqB,OAAM,KACLrB,GAAU,IAGdA,GACF,GACC,CAACT,IAECN,EAEHqC,eAAAC,WAAA,CAAAzD,SAAA,CACEQ,cAACG,EAAY,IACbH,cAACT,EAAoB,CAAAC,SACnBQ,cAACkD,WAAQ,CAACC,SAAU,KAAK3D,SACvBQ,cAAChB,EAAM,CAACE,UAAW,IAAIA,YANbc,cAACoD,IAAO,GAUrB,C","file":"static/js/24.fbcf4c79.chunk.js","sourcesContent":["import { useRoutes } from \"react-router-dom\";\r\nconst Router = ({ allRoutes }) => {\r\n\r\n  const routes = useRoutes([...allRoutes]);\r\n\r\n  return routes;\r\n};\r\n\r\nexport default Router;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nconst OnlineStatusContext = React.createContext(true);\r\n\r\nexport const OnlineStatusProvider = ({ children }) => {\r\n  const [onlineStatus, setOnlineStatus] = useState(true);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"offline\", () => {\r\n      setOnlineStatus(false);\r\n    });\r\n    window.addEventListener(\"online\", () => {\r\n      setOnlineStatus(true);\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"offline\", () => {\r\n        setOnlineStatus(false);\r\n      });\r\n      window.removeEventListener(\"online\", () => {\r\n        setOnlineStatus(true);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <OnlineStatusContext.Provider value={onlineStatus}>\r\n      {children}\r\n    </OnlineStatusContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useOnlineStatus = () => {\r\n  const store = useContext(OnlineStatusContext);\r\n  return store;\r\n};\r\n","import { Suspense, useEffect, useState, useContext } from \"react\";\r\nimport \"./global.css\";\r\n// ** Router Import\r\nimport Router from \"./router/Router\";\r\n\r\n// ** Routes & Default Routes\r\nimport { getRoutes } from \"./router/routes\";\r\n\r\n// ** Hooks Imports\r\nimport { useLayout } from \"@hooks/useLayout\";\r\nimport { getUserData } from \"@utils\";\r\n// import { ToastContainer } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\nimport { OnlineStatusProvider } from \"./utility/context/OnlineContext\";\r\nimport { SC } from \"./views/wasfaty/Api/serverCall\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { IntlService, NavigationService } from \"./views/wasfaty/services\";\r\nimport Spinner from \"./@core/components/spinner/Fallback-spinner\";\r\nimport { IntlContext } from \"./utility/context/IntelContext\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  body {\r\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\r\n      Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\",\r\n      sans-serif;\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n  const [allRoutes, setAllRoutes] = useState([]);\r\n  const intl = useIntl();\r\n  const [init, setInit] = useState(false);\r\n  const intlContext = useContext(IntlContext);\r\n  const navigation = useNavigate();\r\n\r\n  const isDevelopment = process.env.REACT_APP_DEVELOPMENT;\r\n\r\n  // ** Hooks\r\n  const { layout } = useLayout();\r\n\r\n  useEffect(() => {\r\n    NavigationService.setNavigation(navigation);\r\n  }, [navigation]);\r\n\r\n  useEffect(() => {\r\n    IntlService.setIntl(intl);\r\n  }, [intl]);\r\n\r\n  useEffect(() => {\r\n    initAll();\r\n  }, []);\r\n\r\n  const initAll = async () => {\r\n    setInit(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let onRoutes = async () => {\r\n      let routes = await getRoutes(layout);\r\n      setAllRoutes([...routes]);\r\n    };\r\n\r\n    if (getUserData()?._id) {\r\n      SC.getCall({ url: \"token\" })\r\n        .then((res) => {\r\n          try {\r\n            if (res?.data && res?.data?.data?.user[0]) {\r\n              localStorage.setItem(\r\n                \"userData\",\r\n                JSON.stringify(res?.data?.data?.user[0])\r\n              );\r\n            }\r\n          } catch (error) {}\r\n\r\n          onRoutes();\r\n        })\r\n        .catch(() => {\r\n          onRoutes();\r\n        });\r\n    } else {\r\n      onRoutes();\r\n    }\r\n  }, [layout]);\r\n\r\n  if (!init) return <Spinner />;\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <OnlineStatusProvider>\r\n        <Suspense fallback={null}>\r\n          <Router allRoutes={[...allRoutes]} />\r\n          {/* <ToastContainer /> */}\r\n        </Suspense>\r\n      </OnlineStatusProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"sourceRoot":""}