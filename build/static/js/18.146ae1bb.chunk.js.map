{"version":3,"sources":["views/pages/LeaveModule/BasicLeave.js"],"names":["AddEmployee","navigate","useNavigate","parms","useParams","id","parseInt","isNaN","t","useTranslation","userByFrim","setUserByFrim","useState","leaveTypes","setLeaveTypes","picker","setPicker","Date","userId","setUserId","state","setState","userdate","usertime","attendanceTypeId","handleChange","e","target","name","value","useEffect","async","myHeaders","Headers","append","window","localStorage","getItem","formdata","FormData","requestOptions","method","headers","body","redirect","fetch","concat","process","then","response","json","result","console","log","SUCCESS","data","DATA","leaveReason","createdOnTimeByUser","leaveTypeId","catch","error","getLeaveById","getLeaveTypes","getUsers","_jsx","Fragment","children","_jsxs","Form","onSubmit","document","getElementById","saveLeave","Row","Col","md","className","Label","Input","type","onChange","placeholder","length","map","obj","index","label","for","Flatpickr","event","selectedDates","selectedDate","formattedDate","moment","format","handleDateFormat","formattedTime","handleTimeFormat","autoComplete","lastName","Button","color","outline","onClick"],"mappings":"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","file":"static/js/18.146ae1bb.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useState, useEffect, useRef, Fragment } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Alert } from \"reactstrap\";\r\nimport \"@styles/react/apps/app-users.scss\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { Label, Row, Col, Form, Input, Button } from \"reactstrap\";\r\n\r\nconst AddEmployee = () => {\r\n  const navigate = useNavigate();\r\n  let parms = useParams();\r\n  let id = parseInt(parms.id);\r\n  if (isNaN(id)) id = 0;\r\n  const { t } = useTranslation();\r\n  const [userByFrim, setUserByFrim] = useState([]);\r\n  const [leaveTypes, setLeaveTypes] = useState([]);\r\n\r\n  const [picker, setPicker] = useState(new Date());\r\n\r\n  const [userId, setUserId] = useState(\"\");\r\n  //   const [userTime, setUserTime] = React.useState(dayjs(new Date()));\r\n  //   const [userDate, setUserDate] = React.useState(dayjs(new Date()));\r\n  const [state, setState] = useState({\r\n    userdate: \"\",\r\n    usertime: \"\",\r\n    attendanceTypeId: \"\",\r\n    userId: \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const getUsers = async () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData();\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Attendances/GetUsersDropdownByFirm`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.SUCCESS === 1) {\r\n          let data = result.DATA;\r\n          if (data) {\r\n            setUserByFrim(data);\r\n          }\r\n        } else {\r\n          //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        // handleOpenSnackbar(\r\n        //   \"Failed to fetch ! Please try Again later.\",\r\n        //   \"error\"\r\n        // );\r\n      });\r\n  };\r\n  const saveLeave = async () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData(document.getElementById(\"leaveForm\"));\r\n\r\n    formdata.append(\"userId\", userId);\r\n    formdata.append(\"id\", id);\r\n\r\n    console.log(formdata);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Leaves/Save`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.SUCCESS === 1) {\r\n          // handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"success\");\r\n        } else {\r\n          // handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        // handleOpenSnackbar(\r\n        //   \"Failed to fetch ! Please try Again later.\",\r\n        //   \"error\"\r\n        // );\r\n      });\r\n  };\r\n  const getLeaveTypes = async () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData();\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Leaves/GetLeaveTypesDropdown`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.SUCCESS === 1) {\r\n          let data = result.DATA;\r\n          if (data) {\r\n            setLeaveTypes(data);\r\n          }\r\n        } else {\r\n          // handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        // handleOpenSnackbar(\r\n        //   \"Failed to fetch ! Please try Again later.\",\r\n        //   \"error\"\r\n        // );\r\n      });\r\n  };\r\n\r\n  const getLeaveById = async (id) => {\r\n    // setIsLoading(true);\r\n    if (id === 0) {\r\n      // setIsLoading(false);\r\n      return;\r\n    }\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData();\r\n    formdata.append(\"id\", id);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Leaves/GetByIdAndFirm`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(\"getStoreById:\", result);\r\n        if (result.SUCCESS === 1) {\r\n          let data = result.DATA;\r\n          if (data) {\r\n            setState({\r\n              leaveReason: data.leaveReason,\r\n              usertime: data.createdOnTimeByUser,\r\n              leaveTypeId: data.leaveTypeId,\r\n            });\r\n            // setStartOnDate(dayjs(new Date(data.startOnDate)));\r\n            // setEndOnDate(dayjs(new Date(data.endOnDate)));\r\n            setUserId(data.userId);\r\n          }\r\n        } else {\r\n          // handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        // handleOpenSnackbar(\r\n        //   \"Failed to fetch ! Please try Again later.\",\r\n        //   \"error\"\r\n        // );\r\n      });\r\n    // setIsLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    getLeaveById(id);\r\n    getLeaveTypes();\r\n    getUsers();\r\n  }, []);\r\n\r\n  const handleNavigation = () => {\r\n    navigate(\"/ViewAllLeavesData\");\r\n  };\r\n\r\n  const handleDateFormat = (selectedDates) => {\r\n    const selectedDate = selectedDates[0];\r\n    const formattedDate = moment(selectedDate).format(\"DD/MM/YYYY\");\r\n\r\n    console.log(formattedDate);\r\n  };\r\n\r\n  const handleTimeFormat = (event) => {\r\n    const selectedDate = event.target.value;\r\n    const formattedTime = moment(selectedDate, \"HH:mm:ss\").format(\"hh:mm a\");\r\n    setPicker(selectedDate);\r\n    console.log(formattedTime);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Form id=\"employeedata\" onSubmit={() => saveLeave()}>\r\n        <Row>\r\n          <Col md=\"6\" className=\"mb-1\">\r\n            <Label className=\"form-label\">{t(\"Select Employee\")}</Label>\r\n            <Input\r\n              type=\"select\"\r\n              id=\"userId\"\r\n              name=\"userId\"\r\n              value={state.userId}\r\n              onChange={handleChange}\r\n              placeholder=\"Select Employee\"\r\n            >\r\n              <option></option>\r\n              {userByFrim && userByFrim.length > 0\r\n                ? userByFrim.map((obj, index) => (\r\n                    <option value={obj.id} key={obj.id}>\r\n                      {obj.label}\r\n                    </option>\r\n                  ))\r\n                : null}\r\n            </Input>\r\n          </Col>\r\n          <Col md=\"6\" className=\"mb-1\">\r\n            <Label className=\"form-label\">{t(\"Leave Type\")}</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"leaveTypeId\"\r\n              id=\"leaveTypeId\"\r\n              placeholder=\"Leave Type\"\r\n              value={state.attendanceTypeId}\r\n              onChange={handleChange}\r\n            >\r\n              <option></option>\r\n              {leaveTypes && leaveTypes.length > 0\r\n                ? leaveTypes.map((obj, index) => (\r\n                    <option value={obj.id} key={obj.id}>\r\n                      {obj.label}\r\n                    </option>\r\n                  ))\r\n                : null}\r\n            </Input>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for=\"date-time-picker\">\r\n              Leave Date\r\n            </Label>\r\n            <Flatpickr\r\n              // value={picker}\r\n\r\n              // altInput= {true}\r\n              //   dateFormat= \"YYYY-MM-DD\"\r\n              //   altFormat= \"DD-MM-YYYY\"\r\n              //   allowInput= {true}\r\n              id=\"date-time-picker\"\r\n              className=\"form-control\"\r\n              onChange={(event) => handleDateFormat(event)}\r\n            />\r\n          </Col>\r\n          <Col md=\"6\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for=\"date-time-picker\">\r\n              Leave Time\r\n            </Label>\r\n            <Input\r\n              value={picker}\r\n              type=\"time\" // Set type to \"time\"\r\n              id=\"time-picker\" // Unique identifier\r\n              className=\"form-control\"\r\n              onChange={(event) => handleTimeFormat(event)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\" className=\"mb-1\">\r\n            <Label className=\"form-label\">{t(\"Leave Reason\")}</Label>\r\n            <Input\r\n              id=\"leaveReason\"\r\n              name=\"leaveReason\"\r\n              autoComplete=\"family-name\"\r\n              value={state.lastName}\r\n              onChange={handleChange}\r\n              placeholder=\"Leave Reason\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <Button\r\n            color=\"secondary\"\r\n            className=\"btn-prev\"\r\n            outline\r\n            onClick={() => handleNavigation()}\r\n          >\r\n            <span className=\"align-middle d-sm-inline-block d-none\">View</span>\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            className=\"btn-next\"\r\n            //   onClick={}\r\n          >\r\n            <span className=\"align-middle d-sm-inline-block d-none\">Save</span>\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default AddEmployee;\r\n"],"sourceRoot":""}