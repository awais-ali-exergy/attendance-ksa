{"version":3,"sources":["assets/images/illustration/badge.svg","views/ui-elements/cards/statistics/StatsCard.js","@core/components/widgets/stats/TinyChartStats.js","views/ui-elements/cards/statistics/OrdersBarChart.js","views/ui-elements/cards/analytics/RevenueReport.js","views/ui-elements/cards/statistics/ChartjsPolarAreaChart.js","views/pages/dashboard/index.js"],"names":["StatsCard","TinyChartStats","props","title","stats","options","series","type","height","_jsx","Card","className","children","_jsxs","CardBody","Chart","defaultProps","OrdersBarChart","_ref","warning","myData","data","setData","useState","useEffect","axios","get","then","res","chart","stacked","toolbar","show","grid","padding","left","right","top","bottom","plotOptions","bar","horizontal","columnWidth","borderRadius","colors","backgroundBarColors","backgroundBarRadius","legend","dataLabels","enabled","xaxis","labels","axisBorder","axisTicks","yaxis","tooltip","x","statistics","RevenueReport","revenueOptions","lines","categories","style","fontSize","primary","distributed","Row","Col","md","xs","CardTitle","name","id","ChartjsPolarAreaChart","greyColor","labelColor","yellowColor","infoColorShade","warningColorShade","successColorShade","responsive","maintainAspectRatio","animation","duration","layout","scales","r","display","ticks","plugins","position","boxWidth","color","usePointStyle","datasets","borderWidth","label","backgroundColor","CardHeader","tag","UncontrolledDropdown","DropdownToggle","MoreVertical","size","DropdownMenu","end","DropdownItem","PolarArea","myPrimaryData","myDropSizeData","mySKUData","mySecondaryData","myStandardData","myActualData","EcommerceDashboard","useContext","ThemeColors","lg","main","secondary","success","info","dark","PolarAreaChart"],"mappings":"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","file":"static/js/14.4fa8d107.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/badge.2936ed83.svg\";","// ** Third Party Components\r\nimport classnames from \"classnames\";\r\nimport { TrendingUp, User, Box, DollarSign } from \"react-feather\";\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  CardText,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nconst StatsCard = ({ cols }) => {\r\n  const data = [\r\n    {\r\n      title: \"230k\",\r\n      subtitle: \"Sales\",\r\n      color: \"light-primary\",\r\n      icon: <TrendingUp size={24} />,\r\n    },\r\n    {\r\n      title: \"8.549k\",\r\n      subtitle: \"Customers\",\r\n      color: \"light-info\",\r\n      icon: <User size={24} />,\r\n    },\r\n    {\r\n      title: \"1.423k\",\r\n      subtitle: \"Products\",\r\n      color: \"light-danger\",\r\n      icon: <Box size={24} />,\r\n    },\r\n    {\r\n      title: \"$9745\",\r\n      subtitle: \"Revenue\",\r\n      color: \"light-success\",\r\n      icon: <DollarSign size={24} />,\r\n    },\r\n  ];\r\n\r\n  const renderData = () => {\r\n    return data.map((item, index) => {\r\n      const colMargin = Object.keys(cols);\r\n      const margin = index === 2 ? \"sm\" : colMargin[0];\r\n      return (\r\n        <Col\r\n          key={index}\r\n          {...cols}\r\n          className={classnames({\r\n            [`mb-2 mb-${margin}-0`]: index !== data.length - 1,\r\n          })}\r\n        >\r\n          <div className=\"d-flex align-items-center\">\r\n            <div className=\"my-auto\">\r\n              <h4 className=\"fw-bolder mb-0\">{item.title}</h4>\r\n              <CardText className=\"font-small-3 mb-0\">{item.subtitle}</CardText>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"card-statistics\">\r\n      <CardHeader>\r\n        <CardTitle tag=\"h4\">Statistics</CardTitle>\r\n        <CardText className=\"card-text font-small-2 me-25 mb-0\">\r\n          Updated 1 month ago\r\n        </CardText>\r\n      </CardHeader>\r\n      <CardBody className=\"statistics-body\">\r\n        <Row>{renderData()}</Row>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StatsCard;\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst TinyChartStats = props => {\r\n  // ** Props\r\n  const { title, stats, options, series, type, height } = props\r\n\r\n  return (\r\n    <Card className='card-tiny-line-stats'>\r\n      <CardBody className='pb-50'>\r\n        <h6>{title}</h6>\r\n        <h2 className='fw-bolder mb-1'>{stats}</h2>\r\n        <Chart options={options} series={series} type={type} height={height} />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TinyChartStats\r\n\r\n// ** PropTypes\r\nTinyChartStats.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.string.isRequired,\r\n  series: PropTypes.array.isRequired,\r\n  options: PropTypes.object.isRequired\r\n}\r\n\r\n// ** Default Props\r\nTinyChartStats.defaultProps = {\r\n  height: 100\r\n}\r\n","// ** React Imports\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// ** Third Party Components\r\nimport axios from \"axios\";\r\n\r\n// ** Custom Components\r\nimport TinyChartStats from \"@components/widgets/stats/TinyChartStats\";\r\n\r\nconst OrdersBarChart = ({ warning, myData }) => {\r\n  // ** State\r\n  const [data, setData] = useState(myData);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/card/card-statistics/orders-bar-chart\")\r\n      .then((res) => setData(res.data));\r\n    return () => setData(null);\r\n  }, []);\r\n\r\n  const options = {\r\n    chart: {\r\n      stacked: true,\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n    },\r\n    grid: {\r\n      show: false,\r\n      padding: {\r\n        left: 0,\r\n        right: 0,\r\n        top: -15,\r\n        bottom: -15,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: \"20%\",\r\n        borderRadius: [0, 5],\r\n        colors: {\r\n          backgroundBarColors: [\r\n            \"#f3f3f3\",\r\n            \"#f3f3f3\",\r\n            \"#f3f3f3\",\r\n            \"#f3f3f3\",\r\n            \"#f3f3f3\",\r\n          ],\r\n          backgroundBarRadius: 5,\r\n        },\r\n      },\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    colors: [warning],\r\n    xaxis: {\r\n      labels: {\r\n        show: false,\r\n      },\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      show: false,\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        show: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return myData !== null ? (\r\n    <TinyChartStats\r\n      height={70}\r\n      type=\"bar\"\r\n      options={options}\r\n      title={myData.title}\r\n      stats={myData.statistics}\r\n      series={myData.series}\r\n    />\r\n  ) : null;\r\n};\r\n\r\nexport default OrdersBarChart;\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  CardTitle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst RevenueReport = props => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-analytics/revenue-report').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const revenueOptions = {\r\n      chart: {\r\n        stacked: true,\r\n        type: 'bar',\r\n        toolbar: { show: false }\r\n      },\r\n      grid: {\r\n        padding: {\r\n          top: -20,\r\n          bottom: -10\r\n        },\r\n        yaxis: {\r\n          lines: { show: false }\r\n        }\r\n      },\r\n      xaxis: {\r\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n        labels: {\r\n          style: {\r\n            colors: '#b9b9c3',\r\n            fontSize: '0.86rem'\r\n          }\r\n        },\r\n        axisTicks: {\r\n          show: false\r\n        },\r\n        axisBorder: {\r\n          show: false\r\n        }\r\n      },\r\n      legend: {\r\n        show: false\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      colors: [props.primary, props.warning],\r\n      plotOptions: {\r\n        bar: {\r\n          columnWidth: '17%',\r\n          borderRadius: [5]\r\n        },\r\n        distributed: true\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: '#b9b9c3',\r\n            fontSize: '0.86rem'\r\n          }\r\n        }\r\n      }\r\n    },\r\n    revenueSeries = [\r\n      {\r\n        name: 'Earning',\r\n        data: [95, 177, 284, 256, 105, 63, 168, 218, 72]\r\n      },\r\n      {\r\n        name: 'Expense',\r\n        data: [-145, -80, -60, -180, -100, -60, -85, -75, -100]\r\n      }\r\n    ]\r\n\r\n  const budgetSeries = [\r\n      {\r\n        data: [61, 48, 69, 52, 60, 40, 79, 60, 59, 43, 62]\r\n      },\r\n      {\r\n        data: [20, 10, 30, 15, 23, 0, 25, 15, 20, 5, 27]\r\n      }\r\n    ],\r\n    budgetOptions = {\r\n      chart: {\r\n        toolbar: { show: false },\r\n        zoom: { enabled: false },\r\n        type: 'line',\r\n        sparkline: { enabled: true }\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n        dashArray: [0, 5],\r\n        width: [2]\r\n      },\r\n      colors: [props.primary, '#dcdae3'],\r\n      tooltip: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n  return data !== null ? (\r\n    <Card className='card-revenue-budget'>\r\n      <Row className='mx-0'>\r\n        <Col className='revenue-report-wrapper' md='12' xs='12'>\r\n          <div className='d-sm-flex justify-content-between align-items-center mb-3'>\r\n            <CardTitle className='mb-50 mb-sm-0'>{props?.name}</CardTitle>\r\n            <div className='d-flex align-items-center'>\r\n              <div className='d-flex align-items-center me-2'>\r\n                <span className='bullet bullet-primary me-50 cursor-pointer'></span>\r\n                <span>Earning</span>\r\n              </div>\r\n              <div className='d-flex align-items-center'>\r\n                <span className='bullet bullet-warning me-50 cursor-pointer'></span>\r\n                <span>Expense</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Chart id='revenue-report-chart' type='bar' height='230' options={revenueOptions} series={revenueSeries} />\r\n        </Col>\r\n   \r\n      </Row>\r\n    </Card>\r\n  ) : null\r\n}\r\n\r\nexport default RevenueReport\r\n","// ** Third Party Components\r\nimport { PolarArea } from 'react-chartjs-2'\r\nimport { MoreVertical } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap'\r\n\r\nconst ChartjsPolarAreaChart = props => {\r\n  // ** Props\r\n  const { primary, greyColor, labelColor, yellowColor, infoColorShade, warningColorShade, successColorShade } = props\r\n\r\n  // ** Chart Options\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: { duration: 500 },\r\n    layout: {\r\n      padding: {\r\n        top: -5,\r\n        bottom: -45\r\n      }\r\n    },\r\n    scales: {\r\n      r: {\r\n        grid: { display: false },\r\n        ticks: { display: false }\r\n      }\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n        labels: {\r\n          padding: 25,\r\n          boxWidth: 9,\r\n          color: labelColor,\r\n          usePointStyle: true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Chart Data\r\n  const data = {\r\n    labels: ['Lahore', 'Gujranwala', 'Faislabad', 'Karachi', 'Islamabad', 'Pindi'],\r\n    datasets: [\r\n      {\r\n        borderWidth: 0,\r\n        label: 'Population (millions)',\r\n        data: [19, 17.5, 15, 13.5, 11, 9],\r\n        backgroundColor: [primary, yellowColor, warningColorShade, infoColorShade, greyColor, successColorShade]\r\n      }\r\n    ]\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader className='d-flex justify-content-between align-items-sm-center align-items-start flex-sm-row flex-column'>\r\n        <CardTitle tag='h4'>SKU Invoice</CardTitle>\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle className='cursor-pointer' tag='span'>\r\n            <MoreVertical size={14} />\r\n          </DropdownToggle>\r\n          <DropdownMenu end>\r\n            <DropdownItem className='w-100'>Last 28 days</DropdownItem>\r\n            <DropdownItem className='w-100'>Last Month</DropdownItem>\r\n            <DropdownItem className='w-100'>Last Year</DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ height: '350px' }}>\r\n          <PolarArea data={data} options={options} height={350} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ChartjsPolarAreaChart\r\n","// ** React Imports\r\nimport { useContext } from \"react\";\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from \"reactstrap\";\r\n\r\n// ** Context\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\";\r\n\r\n// ** Demo Components\r\nimport CardMedal from \"@src/views/ui-elements/cards/advance/CardMedal\";\r\nimport StatsCard from \"@src/views/ui-elements/cards/statistics/StatsCard\";\r\nimport OrdersBarChart from \"@src/views/ui-elements/cards/statistics/OrdersBarChart\";\r\nimport ProfitLineChart from \"@src/views/ui-elements/cards/statistics/ProfitLineChart\";\r\nimport Earnings from \"@src/views/ui-elements/cards/analytics/Earnings\";\r\nimport RevenueReport from \"@src/views/ui-elements/cards/analytics/RevenueReport\";\r\nimport PolarAreaChart from \"@src/views/ui-elements/cards/statistics/ChartjsPolarAreaChart\";\r\n// ** Styles\r\nimport \"@styles/react/libs/charts/apex-charts.scss\";\r\nimport \"@styles/base/pages/dashboard-ecommerce.scss\";\r\n\r\nconst myPrimaryData = {\r\n  title: \"Primary\",\r\n  statistics: \"2,76k\",\r\n  series: [\r\n    {\r\n      name: \"2020\",\r\n      data: [15, 85, 65, 45, 65],\r\n    },\r\n  ],\r\n};\r\nconst myDropSizeData = {\r\n  title: \"Drop Size\",\r\n  statistics: \"2,76k\",\r\n  series: [\r\n    {\r\n      name: \"2020\",\r\n      data: [45, 25, 65, 45, 95],\r\n    },\r\n  ],\r\n};\r\nconst mySKUData = {\r\n  title: \"SKU/INVOICE\",\r\n  statistics: \"2,76k\",\r\n  series: [\r\n    {\r\n      name: \"2020\",\r\n      data: [45, 35, 65, 75, 65],\r\n    },\r\n  ],\r\n};\r\nconst mySecondaryData = {\r\n  title: \"Secondary\",\r\n  statistics: \"2,76k\",\r\n  series: [\r\n    {\r\n      name: \"2020\",\r\n      data: [15, 15, 65, 45, 65],\r\n    },\r\n  ],\r\n};\r\nconst myStandardData = {\r\n  title: \"DFS Standard\",\r\n  statistics: \"2,76k\",\r\n  series: [\r\n    {\r\n      name: \"2020\",\r\n      data: [45, 85, 65, 45, 65],\r\n    },\r\n  ],\r\n};\r\nconst myActualData = {\r\n  title: \"DFS Actual\",\r\n  statistics: \"2,76k\",\r\n  series: [\r\n    {\r\n      name: \"2020\",\r\n      data: [45, 85, 65, 45, 65],\r\n    },\r\n  ],\r\n};\r\n\r\nconst EcommerceDashboard = () => {\r\n  // ** Context\r\n  const { colors } = useContext(ThemeColors);\r\n\r\n  // ** vars\r\n  const trackBgColor = \"#e9ecef\";\r\n\r\n  return (\r\n    <div id=\"dashboard-ecommerce\">\r\n      <Row className=\"match-height\">\r\n        <Col lg=\"2\" md=\"3\" xs=\"6\">\r\n          <OrdersBarChart\r\n            myData={myPrimaryData}\r\n            warning={colors.primary.main}\r\n          />\r\n        </Col>\r\n        <Col lg=\"2\" md=\"3\" xs=\"6\">\r\n          <OrdersBarChart myData={mySKUData} warning={colors.secondary.main} />\r\n        </Col>\r\n        <Col lg=\"2\" md=\"3\" xs=\"6\">\r\n          <OrdersBarChart\r\n            myData={myDropSizeData}\r\n            warning={colors.success.main}\r\n          />\r\n        </Col>\r\n        <Col lg=\"2\" md=\"3\" xs=\"6\">\r\n          <OrdersBarChart\r\n            myData={mySecondaryData}\r\n            warning={colors.warning.main}\r\n          />\r\n        </Col>\r\n        <Col lg=\"2\" md=\"3\" xs=\"6\">\r\n          <OrdersBarChart\r\n            myData={myStandardData}\r\n            warning={colors.info.main}\r\n          />\r\n        </Col>\r\n        <Col lg=\"2\" md=\"3\" xs=\"6\">\r\n          <OrdersBarChart myData={myActualData} warning={colors.dark.main} />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"match-height\">\r\n        <Col lg=\"4\" md=\"12\">\r\n          <PolarAreaChart\r\n            greyColor={\"#4F5D70\"}\r\n            labelColor={\"#6e6b7b\"}\r\n            yellowColor={\"#ffe800\"}\r\n            primary={colors.primary.main}\r\n            infoColorShade={\"#299AFF\"}\r\n            warningColorShade={\"#ffbd1f\"}\r\n            successColorShade={\"#28dac6\"}\r\n          />\r\n        </Col>\r\n        <Col lg=\"8\" md=\"8\">\r\n          <RevenueReport\r\n            primary={colors.primary.main}\r\n            warning={colors.warning.main}\r\n            name={\"VOL (8 Oz) Secondary\"}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EcommerceDashboard;\r\n"],"sourceRoot":""}