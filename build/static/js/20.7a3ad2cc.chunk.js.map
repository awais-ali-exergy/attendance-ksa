{"version":3,"sources":["views/pages/ManualAttendance/AdminManualAttendance.js"],"names":["AddEmployee","isOpenAlert","setIsOpenAlert","useState","alertMessage","setAlertMessage","alertSeverity","setAlertSeverity","navigate","useNavigate","parms","useParams","id","parseInt","isNaN","t","useTranslation","userByFrim","setUserByFrim","attTypes","setAttTypes","picker","setPicker","Date","userTime","setUserTime","userDate","setUserDate","finalData","setFinalData","userId","data","setUserId","attendanceDataArray","setAttendanceDataArray","state","setState","userdate","createdOnDateByUser","createdOnTimeByUser1","createdOnTimeByUser2","usertime","attendanceTypeId","userName","saveAtt","async","console","log","myHeaders","Headers","append","window","localStorage","getItem","formdata","FormData","i","length","createdOnTimeByUser","requestOptions","method","headers","body","redirect","fetch","concat","process","then","response","json","result","SUCCESS","toast","USER_MESSAGE","catch","error","useEffect","DATA","moment","createdOnByUserTimeDisplay","format","getattendanceById","getUsers","getAttTypes","handleChange","event","name","value","target","findName","find","item","String","label","columnDefs","useMemo","headerName","field","_jsxs","Fragment","children","_jsx","ToastContainer","Form","onSubmit","Row","Col","md","className","Label","Input","type","disabled","onChange","placeholder","map","obj","index","for","Flatpickr","dateFormat","selectedDates","selectedDate","formattedDate","handleDateFormat","Button","color","outline","onClick","handleManageData","formattedStartTime","formattedEndTime","newState","style","marginTop","height","width","display","justifyContent","flexDirection","AgGridReact","rowData","pagination","CustomAlert","isOpen","message","severity","handleCloseAlert","reason"],"mappings":"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","file":"static/js/20.7a3ad2cc.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useState, useEffect, useRef, Fragment, useMemo } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Alert } from \"reactstrap\";\r\nimport \"@styles/react/apps/app-users.scss\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport moment from \"moment\";\r\nimport CustomAlert from \"../../components/alerts/CustomAlert\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/styles/ag-grid.css\";\r\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\r\n\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport { FaMinusCircle } from \"react-icons/fa\";\r\n\r\nimport { Label, Row, Col, Form, Input, Button } from \"reactstrap\";\r\nimport { Item } from \"react-contexify\";\r\nimport { data } from \"jquery\";\r\n\r\nconst AddEmployee = () => {\r\n  const [isOpenAlert, setIsOpenAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [alertSeverity, setAlertSeverity] = useState(\"\");\r\n  const handleOpenAlert = (msg, severity) => {\r\n    setIsOpenAlert(true);\r\n    setAlertMessage(msg);\r\n    setAlertSeverity(severity);\r\n  };\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsOpenAlert(false);\r\n  };\r\n  const navigate = useNavigate();\r\n  let parms = useParams();\r\n  let id = parseInt(parms.id);\r\n  if (isNaN(id)) id = 0;\r\n  const { t } = useTranslation();\r\n  const [userByFrim, setUserByFrim] = useState([]);\r\n  const [attTypes, setAttTypes] = useState([]);\r\n\r\n  const [picker, setPicker] = useState(new Date());\r\n  const [userTime, setUserTime] = useState(new Date());\r\n  const [userDate, setUserDate] = useState(new Date());\r\n  const [finalData, setFinalData] = useState({\r\n    userId: \"\",\r\n    data: [],\r\n  });\r\n  const datecheck = (date) => {\r\n    (date) => setPicker(date);\r\n  };\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  const [attendanceDataArray, setAttendanceDataArray] = useState([]);\r\n\r\n  const [state, setState] = useState({\r\n    userdate: \"\",\r\n    createdOnDateByUser: \"\",\r\n    createdOnTimeByUser1: \"\",\r\n    createdOnTimeByUser2: \"\",\r\n    usertime: \"\",\r\n    attendanceTypeId: \"\",\r\n    userId: \"\",\r\n    userName: \"\",\r\n  });\r\n  // const handleChange = (e) => {\r\n  //   setState({ ...state, [e.target.name]: e.target.value });\r\n  // };\r\n  const getAttTypes = async () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData();\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Attendances/GetAttendanceTypesDropdown`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.SUCCESS === 1) {\r\n          toast(result.USER_MESSAGE);\r\n          let data = result.DATA;\r\n          if (data) {\r\n            setAttTypes(data);\r\n          }\r\n        } else {\r\n          toast(result.USER_MESSAGE);\r\n\r\n          // handleOpenAlert(<span>{result.USER_MESSAGE}.</span>, \"danger\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast(\"Failed to fetch ! Please try Again later\");\r\n\r\n        // console.log(\"error\", error);\r\n        // handleOpenAlert(\r\n        //   <span>Failed to fetch ! Please try Again later.</span>,\r\n        //   \"danger\"\r\n        // );\r\n      });\r\n  };\r\n  const getUsers = async () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData();\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Attendances/GetUsersDropdownByFirm`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.SUCCESS === 1) {\r\n          let data = result.DATA;\r\n          if (data) {\r\n            setUserByFrim(data);\r\n          }\r\n          toast(result.USER_MESSAGE);\r\n        } else {\r\n          toast(result.USER_MESSAGE);\r\n          // handleOpenAlert(<span>{result.USER_MESSAGE}.</span>, \"danger\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast(\"Failed to fetch ! Please try Again later\");\r\n\r\n        // console.log(\"error\", error);\r\n        // handleOpenAlert(\r\n        //   <span>Failed to fetch ! Please try Again later.</span>,\r\n        //   \"danger\"\r\n        // );\r\n      });\r\n  };\r\n  const saveAtt = async () => {\r\n    console.log(finalData, \"Final Data is coming\");\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    // var formdata = new FormData(document.getElementById(\"attForm\"));\r\n    var formdata = new FormData();\r\n    formdata.append(\"userId\", finalData.userId);\r\n    for (let i = 0; i < finalData.data.length; i++) {\r\n      console.log(finalData.data[i].createdOnDateByUser);\r\n      formdata.append(\r\n        \"createdOnDateByUser\",\r\n        finalData.data[i].createdOnDateByUser\r\n      );\r\n      formdata.append(\r\n        \"createdOnTimeByUser\",\r\n        finalData.data[i].createdOnTimeByUser\r\n      );\r\n      formdata.append(\"attendanceTypeId\", finalData.data[i].attendanceTypeId);\r\n    }\r\n\r\n    console.log(formdata);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Attendances/SaveManual`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result, \"result is coming\");\r\n        if (result.SUCCESS === 1) {\r\n          // handleOpenAlert(<span>{result.USER_MESSAGE}.</span>, \"primary\");\r\n\r\n          //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"success\");\r\n          setFinalData({\r\n            userId: \"\",\r\n            data: [],\r\n          });\r\n          setAttendanceDataArray([]);\r\n          toast(result.USER_MESSAGE);\r\n          //navigate(\"/ViewAllAttendanceData\");\r\n        } else {\r\n          toast(result.USER_MESSAGE);\r\n          // handleOpenAlert(<span>{result.USER_MESSAGE}.</span>, \"danger\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast(\"Failed to fetch ! Please try Again later\");\r\n\r\n        // console.log(\"error\", error);\r\n        // handleOpenAlert(\r\n        //   <span>Failed to fetch ! Please try Again later.</span>,\r\n        //   \"danger\"\r\n        // );\r\n      });\r\n  };\r\n  const getattendanceById = async (id) => {\r\n    // setIsLoading(true);\r\n    if (id === 0) {\r\n      //   setIsLoading(false);\r\n      return;\r\n    }\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData();\r\n    formdata.append(\"id\", id);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Attendances/GetManualByIdAndFirm`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.SUCCESS === 1) {\r\n          let data = result.DATA;\r\n          if (data) {\r\n            setState({\r\n              userdate: data.createdOnDateByUser,\r\n              usertime: data.createdOnTimeByUser,\r\n              attendanceTypeId: data.attendanceTypeId,\r\n              userId: data.userId,\r\n            });\r\n\r\n            setUserTime(\r\n              moment(data.createdOnByUserTimeDisplay, \"hh:mm a\").format(\"HH:mm\")\r\n            );\r\n            setUserDate(new Date(data.createdOnDateByUser));\r\n          }\r\n          toast(result.USER_MESSAGE);\r\n        } else {\r\n          toast(result.USER_MESSAGE);\r\n          // handleOpenAlert(<span>{result.USER_MESSAGE}.</span>, \"danger\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast(\"Failed to fetch ! Please try Again later\");\r\n\r\n        // console.log(\"error\", error);\r\n        // handleOpenAlert(\r\n        //   <span>Failed to fetch ! Please try Again later.</span>,\r\n        //   \"danger\"\r\n        // );\r\n      });\r\n    // setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getattendanceById(id);\r\n    getUsers();\r\n    getAttTypes();\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setState({ ...state, [name]: value });\r\n    if (name === \"userId\") {\r\n      const findName = userByFrim.find(\r\n        (item) => String(item.id) === String(event.target.value)\r\n      );\r\n      setState({\r\n        ...state,\r\n        userName: findName.label,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n  const handleNavigation = () => {\r\n    navigate(\"/ViewAllAttendanceData\");\r\n  };\r\n\r\n  const handleDateFormat = (selectedDates) => {\r\n    const selectedDate = selectedDates[0];\r\n    setUserDate(selectedDate);\r\n    const formattedDate = moment(selectedDate).format(\"DD/MM/YYYY\");\r\n    setState({\r\n      ...state,\r\n      userdate: formattedDate,\r\n    });\r\n  };\r\n\r\n  // const handleTimeFormat = (event) => {\r\n  //   const selectedDate = event.target.value;\r\n  //   setUserTime(selectedDate);\r\n  //   setPicker(selectedDate);\r\n  //   const formattedTime = moment(selectedDate, \"HH:mm:ss\").format(\"hh:mm a\");\r\n  //   setState({\r\n  //     ...state,\r\n  //     usertime: formattedTime,\r\n  //   });\r\n  // };\r\n\r\n  const columnDefs = useMemo(\r\n    () => [\r\n      {\r\n        headerName: \"Employee Name\",\r\n        field: \"userName\",\r\n        // sortable: true,\r\n        // filter: true,\r\n        // floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"Attendance Date\",\r\n        field: \"userdate\",\r\n        // sortable: true,\r\n        // filter: true,\r\n        // floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"Clock In Time\",\r\n        field: \"createdOnTimeByUser1\",\r\n        // sortable: true,\r\n        // filter: true,\r\n        // floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"Clock Out Time\",\r\n        field: \"createdOnTimeByUser2\",\r\n        // sortable: true,\r\n        // filter: true,\r\n        // floatingFilter: true,\r\n      },\r\n      // {\r\n      //   headerName: \"Action\",\r\n      //   cellRenderer: (params) => (\r\n      //     <button\r\n      //       onClick={() => navigateToEdit(params.data)}\r\n      //       className=\"\"\r\n      //       style={{\r\n      //         border: \"none\",\r\n      //         padding: \"0px 14px\",\r\n      //         background: \"#10a945\",\r\n      //         color: \"white\",\r\n      //         borderRadius: \"10px\",\r\n      //       }}\r\n      //     >\r\n      //       <FaMinusCircle size={20} />\r\n      //     </button>\r\n      //   ),\r\n      // },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const handleManageData = () => {\r\n    const formattedStartTime = moment(\r\n      state.createdOnTimeByUser1,\r\n      \"HH:mm:ss\"\r\n    ).format(\"hh:mm a\");\r\n    const formattedEndTime = moment(\r\n      state.createdOnTimeByUser2,\r\n      \"HH:mm:ss\"\r\n    ).format(\"hh:mm a\");\r\n\r\n    let newState = {\r\n      userdate: state.userdate,\r\n      createdOnDateByUser: state.createdOnDateByUser,\r\n      createdOnTimeByUser1: formattedStartTime,\r\n      createdOnTimeByUser2: formattedEndTime,\r\n      usertime: state.usertime,\r\n      attendanceTypeId: state.attendanceTypeId,\r\n      userId: state.userId,\r\n      userName: state.userName,\r\n    };\r\n    setAttendanceDataArray([...attendanceDataArray, newState]);\r\n\r\n    if (state.createdOnTimeByUser1 !== \"\") {\r\n      if (state.createdOnTimeByUser2 !== \"\") {\r\n        let obj = [\r\n          {\r\n            createdOnDateByUser: newState.userdate,\r\n            attendanceTypeId: 1,\r\n            createdOnTimeByUser: newState.createdOnTimeByUser1,\r\n          },\r\n          {\r\n            createdOnDateByUser: newState.userdate,\r\n            attendanceTypeId: 2,\r\n            createdOnTimeByUser: newState.createdOnTimeByUser2,\r\n          },\r\n        ];\r\n        setFinalData({\r\n          userId: newState.userId,\r\n          data: [...finalData.data, ...obj],\r\n        });\r\n      } else {\r\n        let obj = {\r\n          createdOnDateByUser: newState.userdate,\r\n          attendanceTypeId: 1,\r\n          createdOnTimeByUser: newState.createdOnTimeByUser1,\r\n        };\r\n        setFinalData({\r\n          userId: newState.userId,\r\n          data: [...finalData.data, obj],\r\n        });\r\n      }\r\n    } else {\r\n      let obj = {\r\n        createdOnDateByUser: newState.userdate,\r\n        attendanceTypeId: 2,\r\n        createdOnTimeByUser: newState.createdOnTimeByUser2,\r\n      };\r\n\r\n      setFinalData({\r\n        userId: newState.userId,\r\n        data: [...finalData.data, obj],\r\n      });\r\n    }\r\n\r\n    setState({\r\n      userdate: \"\",\r\n      createdOnDateByUser: \"\",\r\n      createdOnTimeByUser1: \"\",\r\n      createdOnTimeByUser2: \"\",\r\n      usertime: \"\",\r\n      attendanceTypeId: \"\",\r\n      userId: state.userId,\r\n      userName: state.userName,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer\r\n      // toastStyle={{ backgroundColor: \"#10a945\", color: \"white\" }}\r\n      />\r\n      <Form id=\"attForm\" onSubmit={() => saveAtt()}>\r\n        <Row>\r\n          <Col md=\"6\" className=\"mb-1\">\r\n            <Label className=\"form-label\">{t(\"Select Employee\")}</Label>\r\n            <Input\r\n              type=\"select\"\r\n              id=\"userId\"\r\n              name=\"userId\"\r\n              value={state.userId}\r\n              disabled={state.userId}\r\n              onChange={handleChange}\r\n              placeholder=\"Select Employee\"\r\n            >\r\n              <option></option>\r\n              {userByFrim && userByFrim.length > 0\r\n                ? userByFrim.map((obj, index) => (\r\n                    <option value={obj.id} key={obj.id}>\r\n                      {obj.label}\r\n                    </option>\r\n                  ))\r\n                : null}\r\n            </Input>\r\n          </Col>\r\n          <Col md=\"6\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for=\"date-time-picker\">\r\n              Attendance Date\r\n            </Label>\r\n            <Flatpickr\r\n              value={state.createdOnDateByUser}\r\n              name=\"createdOnDateByUser\"\r\n              dateFormat=\"Y-m-d\"\r\n              id=\"date-time-picker\"\r\n              className=\"form-control\"\r\n              onChange={(event) => handleDateFormat(event)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for=\"date-time-picker\">\r\n              Clock In Time\r\n            </Label>\r\n\r\n            <Input\r\n              value={state.createdOnTimeByUser1}\r\n              type=\"time\"\r\n              name=\"createdOnTimeByUser1\"\r\n              id=\"time-picker-clockIn\"\r\n              className=\"form-control\"\r\n              onChange={(event) => handleChange(event)}\r\n            />\r\n          </Col>\r\n          <Col md=\"6\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for=\"date-time-picker\">\r\n              Clock Out Time\r\n            </Label>\r\n\r\n            <Input\r\n              value={state.createdOnTimeByUser2}\r\n              type=\"time\"\r\n              name=\"createdOnTimeByUser2\"\r\n              id=\"time-picker\"\r\n              className=\"form-control\"\r\n              onChange={(event) => handleChange(event)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <Button\r\n            color=\"secondary\"\r\n            className=\"btn-prev\"\r\n            outline\r\n            onClick={() => handleNavigation()}\r\n          >\r\n            <span className=\"align-middle d-sm-inline-block d-none\">View</span>\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={() => {\r\n              handleManageData();\r\n            }}\r\n            color=\"primary\"\r\n            className=\"btn-next\"\r\n          >\r\n            <span className=\"align-middle d-sm-inline-block d-none\">\r\n              {\"Add\"}\r\n            </span>\r\n          </Button>\r\n        </div>\r\n        {attendanceDataArray.length !== 0 ? (\r\n          <div\r\n            style={{\r\n              marginTop: \"50px\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"ag-theme-quartz\"\r\n              style={{\r\n                height: \"500px\",\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <AgGridReact\r\n                columnDefs={columnDefs}\r\n                rowData={attendanceDataArray}\r\n                pagination={true}\r\n                // paginationPageSize={10}\r\n                // paginationAutoPageSize={true}\r\n                // suppressPaginationPanel={true}\r\n                // animateRows={true}\r\n                // defaultColDef={{\r\n                //   sortable: true,\r\n                //   resizable: true,\r\n                //   filter: true,\r\n                // }}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              className=\"d-flex justify-content-end\"\r\n              style={{\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"primary\"\r\n                className=\"btn-next\"\r\n                onClick={() => saveAtt()}\r\n              >\r\n                <span className=\"align-middle d-sm-inline-block d-none\">\r\n                  {id !== 0 ? \"Update\" : \"Save\"}\r\n                </span>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </Form>\r\n      <CustomAlert\r\n        isOpen={isOpenAlert}\r\n        message={alertMessage}\r\n        severity={alertSeverity}\r\n        handleCloseAlert={() => handleCloseAlert()}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default AddEmployee;\r\n"],"sourceRoot":""}