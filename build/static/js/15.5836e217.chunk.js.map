{"version":3,"sources":["views/pages/AddStoreLocation/AddStoreLocation.js"],"names":["AddEmployee","location","useLocation","data","state","console","log","navigate","useNavigate","parms","useParams","id","parseInt","isNaN","t","useTranslation","country","setCountry","useState","managers","setManagers","city","setCity","setState","label","managerId","countryLabel","countryId","cityId","address","branchData","contactNo","managerLabel","handleChange","e","target","name","getAllByCountryId","value","async","myHeaders","Headers","append","window","localStorage","getItem","formdata","FormData","requestOptions","method","headers","body","redirect","fetch","concat","process","then","response","json","result","SUCCESS","DATA","catch","error","handleOpenSnackbar","_jsx","children","useEffect","Authorization","getManagers","getAllCountries","Fragment","_jsxs","Form","onSubmit","document","getElementById","saveBranch","Row","Col","md","className","Label","Input","onChange","placeholder","type","length","map","obj","index","Button","color","outline","onClick"],"mappings":"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","file":"static/js/15.5836e217.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useState, useEffect, useRef, Fragment } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Alert } from \"reactstrap\";\r\nimport \"@styles/react/apps/app-users.scss\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { Label, Row, Col, Form, Input, Button } from \"reactstrap\";\r\n\r\nconst AddEmployee = () => {\r\n  const location = useLocation();\r\n  const data = location.state && location.state.data;\r\n  console.log(data);\r\n  const navigate = useNavigate();\r\n  let parms = useParams();\r\n  let id = parseInt(parms.id);\r\n  if (isNaN(id)) id = 0;\r\n  const { t } = useTranslation();\r\n  const [country, setCountry] = useState([]);\r\n  const [managers, setManagers] = useState([]);\r\n  const [city, setCity] = useState([]);\r\n  // const [state, setState] = useState({\r\n  //   userdate: \"\",\r\n  //   usertime: \"\",\r\n  //   attendanceTypeId: \"\",\r\n  //   userId: \"\",\r\n  // });\r\n\r\n  const [state, setState] = useState({\r\n    label: data ? data.label : \"\",\r\n    managerId: data ? data.countryLabel : null,\r\n    countryId: data ? data.countryId : null,\r\n    cityId: data ? data.cityId : null,\r\n    address: data ? data.address : null,\r\n    branchData: data ? data.branchData : {},\r\n    contactNo: data ? data.contactNo : \"\",\r\n    managerLabel: data ? data.managerLabel : \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    if (e.target.name == \"countryId\") {\r\n      getAllByCountryId(e.target.value);\r\n    }\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n  const getManagers = async () => {\r\n    // setIsLoading(true);\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/FirmsBranches/GetUsersDropDownByFirm`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization:\r\n            \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\"),\r\n        },\r\n        redirect: \"follow\",\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        if (result.SUCCESS === 1) {\r\n          setManagers(result.DATA);\r\n        } else {\r\n          //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        // handleOpenSnackbar(\r\n        //   \"Failed to fetch ! Please try Again later.\",\r\n        //   \"error\"\r\n        // );\r\n      });\r\n    // setIsLoading(false);\r\n  };\r\n  const getAllCountries = async () => {\r\n    // setIsLoading(true);\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData();\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Countries/GetAll`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.SUCCESS === 1) {\r\n          setCountry(result.DATA);\r\n        } else {\r\n          //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        // handleOpenSnackbar(\r\n        //   \"Failed to fetch ! Please try Again later.\",\r\n        //   \"error\"\r\n        // );\r\n      });\r\n    // setIsLoading(false);\r\n  };\r\n  const getAllByCountryId = async (countryId) => {\r\n    // setIsLoading(true);\r\n    if (countryId != null) {\r\n    } else {\r\n      handleOpenSnackbar(<span>Please select country first.</span>, \"error\");\r\n      //   setIsLoading(false);\r\n      return;\r\n    }\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData();\r\n    formdata.append(\"countryId\", countryId);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Cities/GetAllByCountryId`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.SUCCESS === 1) {\r\n          setCity(result.DATA);\r\n        } else {\r\n          //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        // handleOpenSnackbar(\r\n        //   \"Failed to fetch ! Please try Again later.\",\r\n        //   \"error\"\r\n        // );\r\n      });\r\n    // setIsLoading(false);\r\n  };\r\n  const saveBranch = async () => {\r\n    // setIsLoading(true);\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData(document.getElementById(\"branchData\"));\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/FirmsBranches/Save`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.SUCCESS === 1) {\r\n          // \tsetTimeout(\r\n          // \t\tfunction() {\r\n          // \t\t\tif(id!=0){\r\n          // \t\t\t\twindow.location.replace(\"#/MainDashboard/StoreLocationList\");\r\n          // \t\t\t}else{\r\n          // \t\t\t\twindow.location.reload();\r\n          // \t\t\t}\r\n          // \t\t},2000\r\n          //   );\r\n          //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"success\");\r\n        } else {\r\n          //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        // handleOpenSnackbar(\r\n        //   \"Failed to fetch ! Please try Again later.\",\r\n        //   \"error\"\r\n        // );\r\n      });\r\n\r\n    // setIsLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    getManagers();\r\n    getAllCountries();\r\n  }, []);\r\n\r\n  const handleNavigation = () => {\r\n    setState({\r\n      label: \"\",\r\n      managerId: null,\r\n      countryId: null,\r\n      cityId: null,\r\n      address: null,\r\n      branchData: \"\",\r\n      contactNo: \"\",\r\n      managerLabel: \"\",\r\n    });\r\n    navigate(\"/MainDashboard/StoreLocationList\");\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Form id=\"branchData\" onSubmit={() => saveBranch()}>\r\n        <Row>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\">{t(\"Store Name\")}</Label>\r\n            <Input\r\n              id=\"label\"\r\n              name=\"label\"\r\n              value={state.label}\r\n              onChange={handleChange}\r\n              placeholder=\"Store Name\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\">{t(\"Select Manager\")}</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"managerId\"\r\n              id=\"managerId\"\r\n              value={state.managerId}\r\n              onChange={handleChange}\r\n            >\r\n              <option></option>\r\n              {managers && managers.length > 0\r\n                ? managers.map((obj, index) => (\r\n                    <option value={obj.id} key={obj.id}>\r\n                      {obj.label}\r\n                    </option>\r\n                  ))\r\n                : null}\r\n            </Input>\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\">{t(\"Select Country\")}</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"countryId\"\r\n              id=\"countryId\"\r\n              value={state.countryId}\r\n              onChange={handleChange}\r\n            >\r\n              <option></option>\r\n              {country && country.length > 0\r\n                ? country.map((obj, index) => (\r\n                    <option value={obj.id} key={obj.id}>\r\n                      {obj.label}\r\n                    </option>\r\n                  ))\r\n                : null}\r\n            </Input>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\">{t(\"Select City\")}</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"cityId\"\r\n              id=\"cityId\"\r\n              value={state.cityId}\r\n              onChange={handleChange}\r\n            >\r\n              <option></option>\r\n              {city && city.length > 0\r\n                ? city.map((obj, index) => (\r\n                    <option value={obj.id} key={obj.id}>\r\n                      {obj.label}\r\n                    </option>\r\n                  ))\r\n                : null}\r\n            </Input>\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\">{t(\"Address\")}</Label>\r\n            <Input\r\n              id=\"address\"\r\n              name=\"address\"\r\n              value={state.address}\r\n              onChange={handleChange}\r\n              placeholder=\"Address\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\">{t(\"Contact No\")}</Label>\r\n            <Input\r\n              id=\"contactNo\"\r\n              name=\"contactNo\"\r\n              value={state.contactNo}\r\n              onChange={handleChange}\r\n              placeholder=\"contact No\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <Button\r\n            color=\"secondary\"\r\n            className=\"btn-prev \"\r\n            outline\r\n            onClick={() => handleNavigation()}\r\n          >\r\n            <span className=\"align-middle d-sm-inline-block d-none\">View</span>\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            className=\"btn-next\"\r\n            //   onClick={}\r\n          >\r\n            <span className=\"align-middle d-sm-inline-block d-none\">Save</span>\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default AddEmployee;\r\n"],"sourceRoot":""}