{"version":3,"sources":["views/pages/FirmManagment/FirmManagement.js"],"names":["AddEmployee","isOpenAlert","setIsOpenAlert","useState","alertMessage","setAlertMessage","alertSeverity","setAlertSeverity","parms","useParams","id","parseInt","isNaN","t","useTranslation","state","setState","label","businessType","webUrl","totalBranches","totalEmployees","handleChange","e","target","name","value","useEffect","async","myHeaders","Headers","append","window","localStorage","getItem","requestOptions","method","headers","body","FormData","redirect","fetch","concat","process","then","response","json","result","SUCCESS","data","DATA","toast","USER_MESSAGE","catch","error","getCompanyData","_jsxs","Fragment","children","_jsx","ToastContainer","Form","onSubmit","formdata","document","getElementById","console","log","saveCompany","Row","Col","md","className","Label","Input","onChange","Button","color","outline","type","CustomAlert","isOpen","message","severity","handleCloseAlert","reason"],"mappings":"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","file":"static/js/17.44f402ca.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useState, useEffect, useRef, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Alert } from \"reactstrap\";\r\nimport \"@styles/react/apps/app-users.scss\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CustomAlert from \"../../components/alerts/CustomAlert\";\r\nimport { Label, Row, Col, Form, Input, Button } from \"reactstrap\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst AddEmployee = () => {\r\n  const [isOpenAlert, setIsOpenAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [alertSeverity, setAlertSeverity] = useState(\"\");\r\n  const handleOpenAlert = (msg, severity) => {\r\n    setIsOpenAlert(true);\r\n    setAlertMessage(msg);\r\n    setAlertSeverity(severity);\r\n  };\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsOpenAlert(false);\r\n  };\r\n  let parms = useParams();\r\n  let id = parseInt(parms.id);\r\n  if (isNaN(id)) id = 0;\r\n  const { t } = useTranslation();\r\n  // const [businessType,setBusinessType] =useState([]);\r\n\r\n  const [state, setState] = useState({\r\n    label: \"\",\r\n    businessType: \"\",\r\n    webUrl: \"\",\r\n    totalBranches: \"\",\r\n    totalEmployees: \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n  // const getBusinessTypes = async () => {\r\n  //   // setIsLoading(true);\r\n  //   var myHeaders = new Headers();\r\n  //   myHeaders.append(\r\n  //     \"Authorization\",\r\n  //     \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n  //   );\r\n\r\n  //   var formdata = new FormData();\r\n\r\n  //   var requestOptions = {\r\n  //     method: \"POST\",\r\n  //     headers: myHeaders,\r\n  //     body: formdata,\r\n  //     redirect: \"follow\",\r\n  //   };\r\n\r\n  //   await fetch(\r\n  //     `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Firms/GetBusinessTypesDropdown`,\r\n  //     requestOptions\r\n  //   )\r\n  //     .then((response) => response.json())\r\n  //     .then((result) => {\r\n  //       if (result.SUCCESS === 1) {\r\n  //         setBusinessType( result.DATA );\r\n  //       } else {\r\n  //         handleOpenAlert(<span>{result.USER_MESSAGE}.</span>, \"danger\");\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(\"error\", error);\r\n  //       handleOpenAlert(<span>Failed to fetch ! Please try Again later.</span>, \"danger\");\r\n  //     });\r\n  //   // setIsLoading(false);\r\n\r\n  // };\r\n  const getCompanyData = async () => {\r\n    // setIsLoading(true);\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData();\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Firms/GetByUser`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.SUCCESS === 1) {\r\n          let data = result.DATA;\r\n          if (data) {\r\n            setState({\r\n              label: data.label,\r\n              webUrl: data.webUrl,\r\n              totalBranches: data.totalBranches,\r\n              totalEmployees: data.totalEmployees,\r\n              businessType: data.businessType,\r\n            });\r\n          }\r\n\r\n          toast(result.USER_MESSAGE);\r\n        } else {\r\n          toast(result.USER_MESSAGE);\r\n          // handleOpenAlert(<span>{result.USER_MESSAGE}.</span>, \"danger\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast(\"Failed to fetch ! Please try Again later.\");\r\n        // console.log(\"error\", error);\r\n        // handleOpenAlert(<span>Failed to fetch ! Please try Again later.</span>, \"danger\");\r\n      });\r\n    // setIsLoading(false);\r\n  };\r\n  const saveCompany = async () => {\r\n    // setIsLoading(true);\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData(document.getElementById(\"companydata\"));\r\n    formdata.append(\"firmId\", \"1\");\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Firms/Save`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(\"result\", result);\r\n        if (result.SUCCESS === 1) {\r\n          // setState({ ...state, companyData: result.DATA });\r\n          toast(result.USER_MESSAGE);\r\n          // console.log(state.companyData);\r\n          // handleOpenAlert(<span>{result.USER_MESSAGE}.</span>, \"primary\");\r\n        } else {\r\n          toast(result.USER_MESSAGE);\r\n          // handleOpenAlert(<span>{result.USER_MESSAGE}.</span>, \"danger\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        toast(\"Failed to fetch ! Please try Again later.\");\r\n        // handleOpenAlert(\r\n        //   <span>Failed to fetch ! Please try Again later.</span>,\r\n        //   \"danger\"\r\n        // );\r\n      });\r\n    // setIsLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    getCompanyData();\r\n    // getBusinessTypes();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer\r\n      // toastStyle={{ backgroundColor: \"#10a945\", color: \"white\" }}\r\n      />\r\n      <Form id=\"companydata\" onSubmit={() => saveCompany()}>\r\n        <Row>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\">{t(\"Firm Label\")}</Label>\r\n            <Input\r\n              id=\"label\"\r\n              name=\"label\"\r\n              value={state.label}\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\">{t(\"Add Business Type\")}</Label>\r\n            <Input\r\n              // type=\"select\"\r\n              name=\"businessType\"\r\n              id=\"businessType\"\r\n              value={state.businessType}\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\">{t(\"Website URL\")}</Label>\r\n            <Input\r\n              id=\"webUrl\"\r\n              name=\"webUrl\"\r\n              value={state.webUrl}\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Button color=\"secondary\" className=\"btn-prev d-none\" outline>\r\n            <span className=\"align-middle d-sm-inline-block d-none\">View</span>\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            className=\"btn-next\"\r\n            //   onClick={}\r\n          >\r\n            <span className=\"align-middle d-sm-inline-block d-none\">Save</span>\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n\r\n      <CustomAlert\r\n        isOpen={isOpenAlert}\r\n        message={alertMessage}\r\n        severity={alertSeverity}\r\n        handleCloseAlert={() => handleCloseAlert()}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default AddEmployee;\r\n"],"sourceRoot":""}