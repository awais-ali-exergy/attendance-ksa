{"version":3,"sources":["views/forms/wizard/steps/OutletDetail.js","views/forms/wizard/steps/SocialLinks.js","views/forms/wizard/steps/AccountDetails.js","@core/components/wizard/index.js","hooks/useDimensions.js","views/forms/wizard/WizardModern.js","@core/components/avatar/index.js","@core/components/tables/store/index.js","@core/components/tables/columns.js","@core/components/tables/index.js","views/forms/wizard/steps/PersonalInfo.js"],"names":["colourOptions","value","label","OutletDetail","_ref","stepper","type","t","useTranslation","picker","setPicker","useState","Date","_jsx","Fragment","children","_jsxs","Form","onSubmit","e","preventDefault","Row","Col","md","className","Label","for","concat","Input","id","name","placeholder","Select","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","isSearchable","defaultChecked","Button","color","onClick","previous","ArrowLeft","size","next","ArrowRight","SocialLinks","alert","Flatpickr","onChange","date","outline","disabled","Wizard","forwardRef","props","ref","steps","instance","separator","headerClassName","contentClassName","contentWrapperClassName","activeIndex","setActiveIndex","isMobile","useDimensions","width","setWidth","window","innerWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","Stepper","current","event","detail","indexStep","classnames","vertical","map","step","index","content","defaultProps","ChevronRight","WizardModern","useRef","setStepper","linear","el","Avatar","img","icon","status","badgeUp","tag","Tag","initials","imgWidth","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","rest","undefined","style","str","results","split","forEach","push","join","getInitials","Badge","pill","src","alt","height","getAllData","createAsyncThunk","async","axios","get","data","getData","response","params","users","totalPages","total","getUser","user","deleteUser","dispatch","getState","post","_ref2","delete","createSlice","initialState","allData","selectedUser","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","appUsersSlice","renderClient","row","avatar","length","avatarColor","fullName","statusObj","pending","active","inactive","columns","sortable","minWidth","sortField","selector","cell","Link","to","store","email","role","roleObj","subscriber","class","User","maintainer","Database","editor","Edit2","author","Settings","admin","Slack","Icon","renderRole","currentPlan","billing","UncontrolledDropdown","DropdownToggle","MoreVertical","DropdownMenu","DropdownItem","FileText","href","Archive","Trash2","UsersList","useDispatch","useSelector","sort","setSort","searchTerm","setSearchTerm","currentPage","setCurrentPage","sortColumn","setSortColumn","rowsPerPage","setRowsPerPage","sidebarOpen","setSidebarOpen","currentRole","setCurrentRole","setCurrentPlan","currentStatus","setCurrentStatus","number","q","page","perPage","DataTable","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","handleSort","column","sortDirection","sortIcon","ChevronDown","paginationComponent","CustomPagination","count","Number","Math","ceil","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","dataToRender","filters","Object","keys","some","k","console","log","PersonalInfo","countryOptions","isMulti"],"mappings":"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","file":"static/js/4.09026561.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState } from \"react\";\r\n\r\n// ** Icons Imports\r\nimport { ArrowLeft, ArrowRight } from \"react-feather\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { selectThemeColors } from \"@utils\";\r\nimport Select from \"react-select\";\r\n\r\n// ** Reactstrap Imports\r\nimport { Label, Row, Col, Form, Input, Button } from \"reactstrap\";\r\n\r\nconst colourOptions = [\r\n  { value: \"ocean\", label: \"Select 1\" },\r\n  { value: \"blue\", label: \"Select 2\" },\r\n  { value: \"purple\", label: \"Select 3\" },\r\n];\r\n\r\nconst OutletDetail = ({ stepper, type }) => {\r\n  const { t } = useTranslation();\r\n  const [picker, setPicker] = useState(new Date());\r\n  return (\r\n    <Fragment>\r\n      <Form onSubmit={(e) => e.preventDefault()}>\r\n        <Row>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`twitter-${type}`}>\r\n              {t(\"Outlet Name\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`twitter-${type}`}\r\n              name=\"twitter\"\r\n              placeholder=\"Outlet Name\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`twitter-${type}`}>\r\n              {t(\"Outlet Address\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`twitter-${type}`}\r\n              name=\"twitter\"\r\n              placeholder=\"Outlet Address\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`facebook-${type}`}>\r\n              {t(\"Shop Category\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`facebook-${type}`}\r\n              name=\"facebook\"\r\n              placeholder=\"Shop Category\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`twitter-${type}`}>\r\n              {t(\"Owner Name\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`twitter-${type}`}\r\n              name=\"twitter\"\r\n              placeholder=\"Owner Name\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`facebook-${type}`}>\r\n              {t(\"Contact_No_Outlet\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`facebook-${type}`}\r\n              name=\"facebook\"\r\n              placeholder=\"Contact No\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`facebook-${type}`}>\r\n              {t(\"CNIC No\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`facebook-${type}`}\r\n              name=\"facebook\"\r\n              placeholder=\"CNIC No\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`twitter-${type}`}>\r\n              {t(\"CR\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`twitter-${type}`}\r\n              name=\"twitter\"\r\n              placeholder=\"CR\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`facebook-${type}`}>\r\n              {t(\"Vehicle No\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`facebook-${type}`}\r\n              name=\"facebook\"\r\n              placeholder=\"Vehicle No\"\r\n            />\r\n          </Col>\r\n\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`facebook-${type}`}>\r\n              {t(\"Request Marks\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`facebook-${type}`}\r\n              name=\"facebook\"\r\n              placeholder=\"Request Marks\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\">Select Beat Plan</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              className=\"react-select\"\r\n              classNamePrefix=\"select\"\r\n              defaultValue={colourOptions[0]}\r\n              options={colourOptions}\r\n              isClearable={false}\r\n              isSearchable={false}\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\">Select Sub Channel</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              className=\"react-select\"\r\n              classNamePrefix=\"select\"\r\n              defaultValue={colourOptions[0]}\r\n              options={colourOptions}\r\n              isClearable={false}\r\n              isSearchable={false}\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\">Select VPO Classification</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              className=\"react-select\"\r\n              classNamePrefix=\"select\"\r\n              defaultValue={colourOptions[0]}\r\n              options={colourOptions}\r\n              isClearable={false}\r\n              isSearchable={false}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`facebook-${type}`}>\r\n              {t(\"SND Mark\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`facebook-${type}`}\r\n              name=\"facebook\"\r\n              placeholder=\"SND Mark\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\">Select Category</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              className=\"react-select\"\r\n              classNamePrefix=\"select\"\r\n              defaultValue={colourOptions[0]}\r\n              options={colourOptions}\r\n              isClearable={false}\r\n              isSearchable={false}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\" className=\"mb-1\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <Input type=\"checkbox\" id=\"basic-cb-unchecked\" />\r\n              <Label for=\"basic-cb-checked\" className=\"form-check-label\">\r\n                Sunday\r\n              </Label>\r\n            </div>\r\n          </Col>\r\n          <Col md=\"12\" className=\"mb-1\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <Input type=\"checkbox\" defaultChecked id=\"basic-cb-unchecked\" />\r\n              <Label for=\"basic-cb-checked\" className=\"form-check-label\">\r\n                Monday\r\n              </Label>\r\n            </div>\r\n          </Col>\r\n          <Col md=\"12\" className=\"mb-1\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <Input type=\"checkbox\" id=\"basic-cb-unchecked\" />\r\n              <Label for=\"basic-cb-checked\" className=\"form-check-label\">\r\n                Tuesday\r\n              </Label>\r\n            </div>\r\n          </Col>\r\n          <Col md=\"12\" className=\"mb-1\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <Input type=\"checkbox\" id=\"basic-cb-unchecked\" />\r\n              <Label for=\"basic-cb-checked\" className=\"form-check-label\">\r\n                Wednesday\r\n              </Label>\r\n            </div>\r\n          </Col>\r\n          <Col md=\"12\" className=\"mb-1\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <Input type=\"checkbox\" id=\"basic-cb-unchecked\" />\r\n              <Label for=\"basic-cb-checked\" className=\"form-check-label\">\r\n                Thursday\r\n              </Label>\r\n            </div>\r\n          </Col>\r\n          <Col md=\"12\" className=\"mb-1\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <Input type=\"checkbox\" id=\"basic-cb-unchecked\" />\r\n              <Label for=\"basic-cb-checked\" className=\"form-check-label\">\r\n                Friday\r\n              </Label>\r\n            </div>\r\n          </Col>\r\n          <Col md=\"12\" className=\"mb-1\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <Input type=\"checkbox\" id=\"basic-cb-unchecked\" />\r\n              <Label for=\"basic-cb-checked\" className=\"form-check-label\">\r\n                Saturday\r\n              </Label>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"btn-prev\"\r\n            onClick={() => stepper.previous()}\r\n          >\r\n            <ArrowLeft\r\n              size={14}\r\n              className=\"align-middle me-sm-25 me-0\"\r\n            ></ArrowLeft>\r\n            <span className=\"align-middle d-sm-inline-block d-none\">\r\n              Previous\r\n            </span>\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"btn-next\"\r\n            onClick={() => stepper.next()}\r\n          >\r\n            <span className=\"align-middle d-sm-inline-block d-none\">Next</span>\r\n            <ArrowRight\r\n              size={14}\r\n              className=\"align-middle ms-sm-25 ms-0\"\r\n            ></ArrowRight>\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default OutletDetail;\r\n","// ** React Imports\r\nimport { Fragment, useState } from \"react\";\r\n\r\n// ** Icons Imports\r\nimport { ArrowLeft, ArrowRight } from \"react-feather\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\n// ** Reactstrap Imports\r\nimport { Label, Row, Col, Form, Input, Button } from \"reactstrap\";\r\n\r\nconst SocialLinks = ({ stepper, type }) => {\r\n  const { t } = useTranslation();\r\n  const [picker, setPicker] = useState(new Date());\r\n  return (\r\n    <Fragment>\r\n      <Form onSubmit={(e) => e.preventDefault()}>\r\n        <Row>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`twitter-${type}`}>\r\n              {t(\"RM\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`twitter-${type}`}\r\n              name=\"twitter\"\r\n              placeholder=\"RM\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`twitter-${type}`}>\r\n              {t(\"ID\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`twitter-${type}`}\r\n              name=\"twitter\"\r\n              placeholder=\"ID\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`twitter-${type}`}>\r\n              {t(\"Area Name\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`twitter-${type}`}\r\n              name=\"twitter\"\r\n              placeholder=\"Area Name\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"btn-prev\"\r\n            onClick={() => stepper.previous()}\r\n          >\r\n            <ArrowLeft\r\n              size={14}\r\n              className=\"align-middle me-sm-25 me-0\"\r\n            ></ArrowLeft>\r\n            <span className=\"align-middle d-sm-inline-block d-none\">\r\n              Previous\r\n            </span>\r\n          </Button>\r\n          <Button\r\n            color=\"success\"\r\n            className=\"btn-submit\"\r\n            onClick={() => alert(\"submitted\")}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SocialLinks;\r\n","// ** React Imports\r\nimport { Fragment, useState } from \"react\";\r\n\r\n// ** Icons Imports\r\nimport { ArrowLeft, ArrowRight } from \"react-feather\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\n// ** Reactstrap Imports\r\nimport { Label, Row, Col, Form, Input, Button } from \"reactstrap\";\r\n\r\nconst SocialLinks = ({ stepper, type }) => {\r\n  const { t } = useTranslation();\r\n  const [picker, setPicker] = useState(new Date());\r\n  return (\r\n    <Fragment>\r\n      <Form onSubmit={(e) => e.preventDefault()}>\r\n        <Row>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for=\"default-picker\">\r\n              Default\r\n            </Label>\r\n            <Flatpickr\r\n              className=\"form-control\"\r\n              value={picker}\r\n              onChange={(date) => setPicker(date)}\r\n              id=\"default-picker\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`twitter-${type}`}>\r\n              {t(\"Requested By\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`twitter-${type}`}\r\n              name=\"twitter\"\r\n              placeholder=\"Requested By\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`facebook-${type}`}>\r\n              {t(\"Contact No\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`facebook-${type}`}\r\n              name=\"facebook\"\r\n              placeholder=\"+92**********\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`twitter-${type}`}>\r\n              {t(\"New Outlet Request\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`twitter-${type}`}\r\n              name=\"twitter\"\r\n              placeholder=\"New Outlet Request\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`facebook-${type}`}>\r\n              {t(\"Agency ID\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`facebook-${type}`}\r\n              name=\"facebook\"\r\n              placeholder=\"Agency ID\"\r\n            />\r\n          </Col>\r\n          <Col md=\"4\" className=\"mb-1\">\r\n            <Label className=\"form-label\" for={`facebook-${type}`}>\r\n              {t(\"Agency Name\")}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              id={`facebook-${type}`}\r\n              name=\"facebook\"\r\n              placeholder=\"Agency Name\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <Button color=\"secondary\" className=\"btn-prev\" outline disabled>\r\n            <ArrowLeft\r\n              size={14}\r\n              className=\"align-middle me-sm-25 me-0\"\r\n            ></ArrowLeft>\r\n            <span className=\"align-middle d-sm-inline-block d-none\">\r\n              Previous\r\n            </span>\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"btn-next\"\r\n            onClick={() => stepper.next()}\r\n          >\r\n            <span className=\"align-middle d-sm-inline-block d-none\">Next</span>\r\n            <ArrowRight\r\n              size={14}\r\n              className=\"align-middle ms-sm-25 ms-0\"\r\n            ></ArrowRight>\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SocialLinks;\r\n","// ** React Imports\r\nimport { useEffect, useState, Fragment, forwardRef } from \"react\";\r\n\r\n// ** Third Party Components\r\nimport Stepper from \"bs-stepper\";\r\nimport classnames from \"classnames\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { ChevronRight } from \"react-feather\";\r\n// import {\r\n//   BrowserView,\r\n//   MobileView,\r\n//   isBrowser,\r\n//   isMobile,\r\n// } from \"react-device-detect\";\r\nimport { useDimensions } from \"../../../hooks/useDimensions\";\r\n\r\n// ** Styles\r\nimport \"bs-stepper/dist/css/bs-stepper.min.css\";\r\nimport \"../../../@core/scss/base/plugins/forms/form-wizard.scss\";\r\n\r\nconst Wizard = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    type,\r\n    steps,\r\n    options,\r\n    instance,\r\n    separator,\r\n    className,\r\n    headerClassName,\r\n    contentClassName,\r\n    contentWrapperClassName,\r\n  } = props;\r\n\r\n  // ** State\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const { isMobile } = useDimensions();\r\n  // ** Vars\r\n  let stepper = null;\r\n\r\n  // ** Step change listener on mount\r\n  useEffect(() => {\r\n    stepper = new Stepper(ref.current, options);\r\n\r\n    ref.current.addEventListener(\"shown.bs-stepper\", function (event) {\r\n      setActiveIndex(event.detail.indexStep);\r\n    });\r\n\r\n    if (instance) {\r\n      instance(stepper);\r\n    }\r\n  }, []);\r\n\r\n  // ** Renders Wizard Header\r\n  const renderHeader = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <Fragment key={step.id}>\r\n          {index !== 0 && index !== steps.length ? (\r\n            <div className=\"line\">{separator}</div>\r\n          ) : null}\r\n          <div\r\n            className={classnames(\"step\", {\r\n              crossed: activeIndex > index,\r\n              active: index === activeIndex,\r\n            })}\r\n            data-target={`#${step.id}`}\r\n          >\r\n            <button type=\"button\" className=\"step-trigger\">\r\n              <span className=\"bs-stepper-box\">\r\n                {step.icon ? step.icon : index + 1}\r\n              </span>\r\n              <span className=\"bs-stepper-label\">\r\n                {!isMobile && (\r\n                  <span className=\"bs-stepper-title\">{step.title}</span>\r\n                )}\r\n                {step.subtitle ? (\r\n                  <span className=\"bs-stepper-subtitle\">{step.subtitle}</span>\r\n                ) : null}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  // ** Renders Wizard Content\r\n  const renderContent = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <div\r\n          className={classnames(\"content\", {\r\n            [contentClassName]: contentClassName,\r\n            \"active dstepper-block\": activeIndex === index,\r\n          })}\r\n          id={step.id}\r\n          key={step.id}\r\n        >\r\n          {step.content}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={classnames(\"bs-stepper\", {\r\n        [className]: className,\r\n        vertical: type === \"vertical\",\r\n        \"vertical wizard-modern\": type === \"modern-vertical\",\r\n        \"wizard-modern\": type === \"modern-horizontal\",\r\n      })}\r\n    >\r\n      {/* <div\r\n        style={{ paddingLeft: 10, paddingRight: 10}}\r\n        className={classnames(\"bs-stepper-header\", {\r\n          [headerClassName]: headerClassName,\r\n        })}\r\n      >\r\n        {renderHeader()}\r\n      </div> */}\r\n      <div\r\n        className={classnames(\"bs-stepper-content\", {\r\n          [contentWrapperClassName]: contentWrapperClassName,\r\n        })}\r\n      >\r\n        {renderContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Wizard;\r\n\r\n// ** Default Props\r\nWizard.defaultProps = {\r\n  options: {},\r\n  type: \"horizontal\",\r\n  separator: <ChevronRight size={17} />,\r\n};\r\n\r\n// ** PropTypes\r\nWizard.propTypes = {\r\n  type: PropTypes.string,\r\n  instance: PropTypes.func,\r\n  options: PropTypes.object,\r\n  className: PropTypes.string,\r\n  separator: PropTypes.element,\r\n  headerClassName: PropTypes.string,\r\n  contentClassName: PropTypes.string,\r\n  contentWrapperClassName: PropTypes.string,\r\n  steps: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      subtitle: PropTypes.string,\r\n      icon: PropTypes.any,\r\n      content: PropTypes.any.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport const useDimensions = () => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  const handleWindowSizeChange = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleWindowSizeChange);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\r\n    };\r\n  }, []);\r\n\r\n  const isMobile = width <= 768;\r\n\r\n  return {\r\n    isMobile,\r\n  };\r\n};\r\n","// ** React Imports\r\nimport { useRef, useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Wizard from '@components/wizard'\r\nimport Tables from '@components/tables'\r\n\r\n// ** Steps\r\nimport Address from './steps/OutletDetail'\r\nimport SocialLinks from './steps/SocialLinks'\r\nimport PersonalInfo from './steps/PersonalInfo'\r\nimport AccountDetails from './steps/AccountDetails'\r\n\r\n// ** Icons Imports\r\nimport { FileText, User, MapPin, Link } from 'react-feather'\r\n\r\nconst WizardModern = (props) => {\r\n  // ** Ref\r\n  const ref = useRef(null)\r\n\r\n  // ** State\r\n  const [stepper, setStepper] = useState(null)\r\n\r\n  // const steps = [\r\n  //   {\r\n  //     id: 'account-details',\r\n  //     title: 'Account Details',\r\n  //     subtitle: 'Enter Your Account Details.',\r\n  //     icon: <FileText size={18} />,\r\n  //     content:<Tables/>\r\n  //   },\r\n  //   {\r\n  //     id: 'personal-info',\r\n  //     title: 'Personal Info',\r\n  //     subtitle: 'Add Personal Info',\r\n  //     icon: <User size={18} />,\r\n  //     content:<Tables/>\r\n  //   },\r\n  //   {\r\n  //     id: 'step-address',\r\n  //     title: 'Address',\r\n  //     subtitle: 'Add Address',\r\n  //     icon: <MapPin size={18} />,\r\n  //     content: <Tables/>\r\n  //   },\r\n  //   {\r\n  //     id: 'social-links',\r\n  //     title: 'Social Links',\r\n  //     subtitle: 'Add Social Links',\r\n  //     icon: <Link size={18} />,\r\n  //     content: <Tables/>\r\n  //   }\r\n  // ]\r\n\r\n  return (\r\n    <div className='modern-horizontal-wizard'>\r\n      <Wizard\r\n        type='modern-horizontal'\r\n        ref={ref}\r\n        steps={props?.steps}\r\n        options={{\r\n          linear: false\r\n        }}\r\n        instance={el => setStepper(el)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WizardModern\r\n","// ** React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    img,\r\n    size,\r\n    icon,\r\n    color,\r\n    status,\r\n    badgeUp,\r\n    content,\r\n    tag: Tag,\r\n    initials,\r\n    imgWidth,\r\n    className,\r\n    badgeText,\r\n    imgHeight,\r\n    badgeColor,\r\n    imgClassName,\r\n    contentStyles,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** Function to extract initials from content\r\n  const getInitials = str => {\r\n    const results = []\r\n    const wordArray = str.split(' ')\r\n    wordArray.forEach(e => {\r\n      results.push(e[0])\r\n    })\r\n    return results.join('')\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar', {\r\n        [className]: className,\r\n        [`bg-${color}`]: color,\r\n        [`avatar-${size}`]: size\r\n      })}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {img === false || img === undefined ? (\r\n        <span\r\n          className={classnames('avatar-content', {\r\n            'position-relative': badgeUp\r\n          })}\r\n          style={contentStyles}\r\n        >\r\n          {initials ? getInitials(content) : content}\r\n\r\n          {icon ? icon : null}\r\n          {badgeUp ? (\r\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\r\n              {badgeText ? badgeText : '0'}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n      ) : (\r\n        <img\r\n          className={classnames({\r\n            [imgClassName]: imgClassName\r\n          })}\r\n          src={img}\r\n          alt='avatarImg'\r\n          height={imgHeight && !size ? imgHeight : 32}\r\n          width={imgWidth && !size ? imgWidth : 32}\r\n        />\r\n      )}\r\n      {status ? (\r\n        <span\r\n          className={classnames({\r\n            [`avatar-status-${status}`]: status,\r\n            [`avatar-status-${size}`]: size\r\n          })}\r\n        ></span>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n})\r\n\r\nexport default Avatar\r\n\r\n// ** PropTypes\r\nAvatar.propTypes = {\r\n  icon: Proptypes.node,\r\n  src: Proptypes.string,\r\n  badgeUp: Proptypes.bool,\r\n  content: Proptypes.string,\r\n  badgeText: Proptypes.string,\r\n  className: Proptypes.string,\r\n  imgClassName: Proptypes.string,\r\n  contentStyles: Proptypes.object,\r\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\r\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\r\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  badgeColor: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  color: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  initials(props) {\r\n    if (props['initials'] && props['content'] === undefined) {\r\n      return new Error('content prop is required with initials prop.')\r\n    }\r\n    if (props['initials'] && typeof props['content'] !== 'string') {\r\n      return new Error('content prop must be a string.')\r\n    }\r\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\r\n      return new Error('initials must be a boolean!')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nAvatar.defaultProps = {\r\n  tag: 'div'\r\n}\r\n","// ** Redux Imports\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\n// ** Axios Imports\r\nimport axios from 'axios'\r\n\r\nexport const getAllData = createAsyncThunk('appUsers/getAllData', async () => {\r\n  const response = await axios.get('/api/users/list/all-data')\r\n  return response.data\r\n})\r\n\r\nexport const getData = createAsyncThunk('appUsers/getData', async params => {\r\n  const response = await axios.get('/api/users/list/data', params)\r\n  return {\r\n    params,\r\n    data: response.data.users,\r\n    totalPages: response.data.total\r\n  }\r\n})\r\n\r\nexport const getUser = createAsyncThunk('appUsers/getUser', async id => {\r\n  const response = await axios.get('/api/users/user', { id })\r\n  return response.data.user\r\n})\r\n\r\nexport const addUser = createAsyncThunk('appUsers/addUser', async (user, { dispatch, getState }) => {\r\n  await axios.post('/apps/users/add-user', user)\r\n  await dispatch(getData(getState().users.params))\r\n  await dispatch(getAllData())\r\n  return user\r\n})\r\n\r\nexport const deleteUser = createAsyncThunk('appUsers/deleteUser', async (id, { dispatch, getState }) => {\r\n  await axios.delete('/apps/users/delete', { id })\r\n  await dispatch(getData(getState().users.params))\r\n  await dispatch(getAllData())\r\n  return id\r\n})\r\n\r\nexport const appUsersSlice = createSlice({\r\n  name: 'appUsers',\r\n  initialState: {\r\n    data: [],\r\n    total: 1,\r\n    params: {},\r\n    allData: [],\r\n    selectedUser: null\r\n  },\r\n  reducers: {},\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(getAllData.fulfilled, (state, action) => {\r\n        state.allData = action.payload\r\n      })\r\n      .addCase(getData.fulfilled, (state, action) => {\r\n        state.data = action.payload.data\r\n        state.params = action.payload.params\r\n        state.total = action.payload.totalPages\r\n      })\r\n      .addCase(getUser.fulfilled, (state, action) => {\r\n        state.selectedUser = action.payload\r\n      })\r\n  }\r\n})\r\n\r\nexport default appUsersSlice.reducer\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\nimport { getUser, deleteUser } from './store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'User',\r\n    sortable: true,\r\n    minWidth: '300px',\r\n    sortField: 'fullName',\r\n    selector: row => row.fullName,\r\n    cell: row => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        {renderClient(row)}\r\n        <div className='d-flex flex-column'>\r\n          <Link\r\n            to={`/apps/user/view/${row.id}`}\r\n            className='user_name text-truncate text-body'\r\n            onClick={() => store.dispatch(getUser(row.id))}\r\n          >\r\n            <span className='fw-bolder'>{row.fullName}</span>\r\n          </Link>\r\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    name: 'Role',\r\n    sortable: true,\r\n    minWidth: '172px',\r\n    sortField: 'role',\r\n    selector: row => row.role,\r\n    cell: row => renderRole(row)\r\n  },\r\n  {\r\n    name: 'Plan',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'currentPlan',\r\n    selector: row => row.currentPlan,\r\n    cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\r\n  },\r\n  {\r\n    name: 'Billing',\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: row => row.billing,\r\n    cell: row => <span className='text-capitalize'>{row.billing}</span>\r\n  },\r\n  {\r\n    name: 'Status',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'status',\r\n    selector: row => row.status,\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[row.status]} pill>\r\n        {row.status}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '100px',\r\n    cell: row => (\r\n      <div className='column-action'>\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle tag='div' className='btn btn-sm'>\r\n            <MoreVertical size={14} className='cursor-pointer' />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem\r\n              tag={Link}\r\n              className='w-100'\r\n              to={`/apps/user/view/${row.id}`}\r\n              onClick={() => store.dispatch(getUser(row.id))}\r\n            >\r\n              <FileText size={14} className='me-50' />\r\n              <span className='align-middle'>Details</span>\r\n            </DropdownItem>\r\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\r\n              <Archive size={14} className='me-50' />\r\n              <span className='align-middle'>Edit</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={e => {\r\n                e.preventDefault()\r\n                store.dispatch(deleteUser(row.id))\r\n              }}\r\n            >\r\n              <Trash2 size={14} className='me-50' />\r\n              <span className='align-middle'>Delete</span>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { getAllData, getData } from './store'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport ReactPaginate from 'react-paginate'\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy } from 'react-feather'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n// ** Table Header\r\n// const CustomHeader = ({ store, toggleSidebar, handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\r\n//   // ** Converts table to CSV\r\n//   function convertArrayOfObjectsToCSV(array) {\r\n//     let result\r\n\r\n//     const columnDelimiter = ','\r\n//     const lineDelimiter = '\\n'\r\n//     const keys = Object.keys(store.data[0])\r\n\r\n//     result = ''\r\n//     result += keys.join(columnDelimiter)\r\n//     result += lineDelimiter\r\n\r\n//     array.forEach(item => {\r\n//       let ctr = 0\r\n//       keys.forEach(key => {\r\n//         if (ctr > 0) result += columnDelimiter\r\n\r\n//         result += item[key]\r\n\r\n//         ctr++\r\n//       })\r\n//       result += lineDelimiter\r\n//     })\r\n\r\n//     return result\r\n//   }\r\n\r\n//   // ** Downloads CSV\r\n//   function downloadCSV(array) {\r\n//     const link = document.createElement('a')\r\n//     let csv = convertArrayOfObjectsToCSV(array)\r\n//     if (csv === null) return\r\n\r\n//     const filename = 'export.csv'\r\n\r\n//     if (!csv.match(/^data:text\\/csv/i)) {\r\n//       csv = `data:text/csv;charset=utf-8,${csv}`\r\n//     }\r\n\r\n//     link.setAttribute('href', encodeURI(csv))\r\n//     link.setAttribute('download', filename)\r\n//     link.click()\r\n//   }\r\n//   return (\r\n//     <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\r\n//       <Row>\r\n//         <Col xl='6' className='d-flex align-items-center p-0'>\r\n//           <div className='d-flex align-items-center w-100'>\r\n//             <label htmlFor='rows-per-page'>Show</label>\r\n//             <Input\r\n//               className='mx-50'\r\n//               type='select'\r\n//               id='rows-per-page'\r\n//               value={rowsPerPage}\r\n//               onChange={handlePerPage}\r\n//               style={{ width: '5rem' }}\r\n//             >\r\n//               <option value='10'>10</option>\r\n//               <option value='25'>25</option>\r\n//               <option value='50'>50</option>\r\n//             </Input>\r\n//             <label htmlFor='rows-per-page'>Entries</label>\r\n//           </div>\r\n//         </Col>\r\n//         <Col\r\n//           xl='6'\r\n//           className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\r\n//         >\r\n//           <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n//             <label className='mb-0' htmlFor='search-invoice'>\r\n//               Search:\r\n//             </label>\r\n//             <Input\r\n//               id='search-invoice'\r\n//               className='ms-50 w-100'\r\n//               type='text'\r\n//               value={searchTerm}\r\n//               onChange={e => handleFilter(e.target.value)}\r\n//             />\r\n//           </div>\r\n\r\n//           <div className='d-flex align-items-center table-header-actions'>\r\n//             <UncontrolledDropdown className='me-1'>\r\n//               <DropdownToggle color='secondary' caret outline>\r\n//                 <Share className='font-small-4 me-50' />\r\n//                 <span className='align-middle'>Export</span>\r\n//               </DropdownToggle>\r\n//               <DropdownMenu>\r\n//                 <DropdownItem className='w-100'>\r\n//                   <Printer className='font-small-4 me-50' />\r\n//                   <span className='align-middle'>Print</span>\r\n//                 </DropdownItem>\r\n//                 <DropdownItem className='w-100' onClick={() => downloadCSV(store.data)}>\r\n//                   <FileText className='font-small-4 me-50' />\r\n//                   <span className='align-middle'>CSV</span>\r\n//                 </DropdownItem>\r\n//                 <DropdownItem className='w-100'>\r\n//                   <Grid className='font-small-4 me-50' />\r\n//                   <span className='align-middle'>Excel</span>\r\n//                 </DropdownItem>\r\n//                 <DropdownItem className='w-100'>\r\n//                   <File className='font-small-4 me-50' />\r\n//                   <span className='align-middle'>PDF</span>\r\n//                 </DropdownItem>\r\n//                 <DropdownItem className='w-100'>\r\n//                   <Copy className='font-small-4 me-50' />\r\n//                   <span className='align-middle'>Copy</span>\r\n//                 </DropdownItem>\r\n//               </DropdownMenu>\r\n//             </UncontrolledDropdown>\r\n\r\n//             <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\r\n//               Add New User\r\n//             </Button>\r\n//           </div>\r\n//         </Col>\r\n//       </Row>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.users)\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\r\n  const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\r\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n\r\n  // ** Function to toggle sidebar\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(getAllData())\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }, [dispatch, store.data.length, sort, sortColumn, currentPage])\r\n\r\n  // ** User filter options\r\n  const roleOptions = [\r\n    { value: '', label: 'Select Role' },\r\n    { value: 'admin', label: 'Admin' },\r\n    { value: 'author', label: 'Author' },\r\n    { value: 'editor', label: 'Editor' },\r\n    { value: 'maintainer', label: 'Maintainer' },\r\n    { value: 'subscriber', label: 'Subscriber' }\r\n  ]\r\n\r\n  const planOptions = [\r\n    { value: '', label: 'Select Plan' },\r\n    { value: 'basic', label: 'Basic' },\r\n    { value: 'company', label: 'Company' },\r\n    { value: 'enterprise', label: 'Enterprise' },\r\n    { value: 'team', label: 'Team' }\r\n  ]\r\n\r\n  const statusOptions = [\r\n    { value: '', label: 'Select Status', number: 0 },\r\n    { value: 'pending', label: 'Pending', number: 1 },\r\n    { value: 'active', label: 'Active', number: 2 },\r\n    { value: 'inactive', label: 'Inactive', number: 3 }\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: currentPage,\r\n        role: currentRole.value,\r\n        currentPlan: currentPlan.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      role: currentRole.value,\r\n      currentPlan: currentPlan.value,\r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    console.log('qwasdsa', store.data)\r\n    // if (store.data.length > 0) {\r\n    //   return store.data\r\n    // } else if (store.data.length === 0 && isFiltered) {\r\n    //   return []\r\n    // } else {\r\n    //   return store.allData.slice(0, rowsPerPage)\r\n    // }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Card>\r\n        <CardHeader>\r\n          <CardTitle tag='h4'>Filters</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md='4'>\r\n              <Label for='role-select'>Role</Label>\r\n              <Select\r\n                isClearable={false}\r\n                value={currentRole}\r\n                options={roleOptions}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                theme={selectThemeColors}\r\n                onChange={data => {\r\n                  setCurrentRole(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      role: data.value,\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      status: currentStatus.value,\r\n                      currentPlan: currentPlan.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className='my-md-0 my-1' md='4'>\r\n              <Label for='plan-select'>Plan</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={planOptions}\r\n                value={currentPlan}\r\n                onChange={data => {\r\n                  setCurrentPlan(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value,\r\n                      currentPlan: data.value,\r\n                      status: currentStatus.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md='4'>\r\n              <Label for='status-select'>Status</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={statusOptions}\r\n                value={currentStatus}\r\n                onChange={data => {\r\n                  setCurrentStatus(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      status: data.value,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value,\r\n                      currentPlan: currentPlan.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card> */}\r\n\r\n      {/* <Card className='overflow-hidden'> */}\r\n        <div className='react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            subHeader\r\n            sortServer\r\n            pagination\r\n            responsive\r\n            paginationServer\r\n            columns={columns}\r\n            onSort={handleSort}\r\n            sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n            // subHeaderComponent={\r\n            //   <CustomHeader\r\n            //     store={store}\r\n            //     searchTerm={searchTerm}\r\n            //     rowsPerPage={rowsPerPage}\r\n            //     handleFilter={handleFilter}\r\n            //     handlePerPage={handlePerPage}\r\n            //     toggleSidebar={toggleSidebar}\r\n            //   />\r\n            // }\r\n          />\r\n        </div>\r\n      {/* </Card> */}\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label, Row, Col, Form, Input, Button } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst PersonalInfo = ({ stepper, type }) => {\r\n  const countryOptions = [\r\n    { value: 'UK', label: 'UK' },\r\n    { value: 'USA', label: 'USA' },\r\n    { value: 'Spain', label: 'Spain' },\r\n    { value: 'France', label: 'France' },\r\n    { value: 'Italy', label: 'Italy' },\r\n    { value: 'Australia', label: 'Australia' }\r\n  ]\r\n\r\n  const languageOptions = [\r\n    { value: 'English', label: 'English' },\r\n    { value: 'French', label: 'French' },\r\n    { value: 'Spanish', label: 'Spanish' },\r\n    { value: 'Italian', label: 'Italian' },\r\n    { value: 'Japanese', label: 'Japanese' }\r\n  ]\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Personal Info</h5>\r\n        <small>Enter Your Personal Info.</small>\r\n      </div>\r\n      <Form onSubmit={e => e.preventDefault()}>\r\n        <Row>\r\n          <Col md='6' className='mb-1'>\r\n            <Label className='form-label' for={`first-name-${type}`}>\r\n              First Name\r\n            </Label>\r\n            <Input type='text' name='first-name' id={`first-name-${type}`} placeholder='John' />\r\n          </Col>\r\n          <Col md='6' className='mb-1'>\r\n            <Label className='form-label' for={`last-name-${type}`}>\r\n              Last Name\r\n            </Label>\r\n            <Input type='text' name='last-name' id={`last-name-${type}`} placeholder='Doe' />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md='6' className='mb-1'>\r\n            <Label className='form-label' for={`country-${type}`}>\r\n              Country\r\n            </Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              isClearable={false}\r\n              id={`country-${type}`}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              options={countryOptions}\r\n              defaultValue={countryOptions[0]}\r\n            />\r\n          </Col>\r\n          <Col md='6' className='mb-1'>\r\n            <Label className='form-label' for={`language-${type}`}>\r\n              Language\r\n            </Label>\r\n            <Select\r\n              isMulti\r\n              isClearable={false}\r\n              theme={selectThemeColors}\r\n              id={`language-${type}`}\r\n              options={languageOptions}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button color='primary' className='btn-prev' onClick={() => stepper.previous()}>\r\n            <ArrowLeft size={14} className='align-middle me-sm-25 me-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button>\r\n          <Button color='primary' className='btn-next' onClick={() => stepper.next()}>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ms-sm-25 ms-0'></ArrowRight>\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PersonalInfo\r\n"],"sourceRoot":""}