{"version":3,"sources":["views/pages/AddStoreLocation/ListOfBranches/ListOfBranches.js"],"names":["ListOfBranches","listBranches","setListBranches","useState","useNavigate","useEffect","async","fetch","concat","process","method","headers","Authorization","window","localStorage","getItem","redirect","then","response","json","result","SUCCESS","DATA","console","error","USER_MESSAGE","catch","getAllStores","columnDefs","useMemo","headerName","field","sortable","filter","floatingFilter","cellRenderer","params","_jsx","onClick","navigateToEdit","data","log","className","style","border","padding","background","color","children","MdModeEdit","size","height","width","AgGridReact","rowData","pagination","paginationPageSize","paginationAutoPageSize","suppressPaginationPanel","animateRows","defaultColDef","resizable"],"mappings":"iGAAA,kEAkIeA,UA3HQA,KACrB,MAAOC,EAAcC,GAAmBC,mBAAS,IAChCC,cA2BjBC,qBAAU,KAzBWC,iBACbC,MAAM,GAADC,OACNC,2BAAgCD,OAAGC,OAAkC,+BACxE,CACEC,OAAQ,OACRC,QAAS,CACPC,cACE,UAAYC,OAAOC,aAAaC,QAAQ,mBAE5CC,SAAU,WAGXC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACkB,IAAnBA,EAAOC,QACTnB,EAAgBkB,EAAOE,MAEvBC,QAAQC,MAAMJ,EAAOK,aACvB,IAEDC,OAAOF,IACND,QAAQC,MAAM,mBAAoBA,EAAM,GACxC,EAIJG,EAAc,GACb,IAEH,MAKMC,EAAaC,mBACjB,IAAM,CACJ,CACEC,WAAY,YACZC,MAAO,KACPC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,GAElB,CACEJ,WAAY,cACZC,MAAO,QACPC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,GAElB,CACEJ,WAAY,eACZC,MAAO,eACPC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,GAElB,CACEJ,WAAY,UACZC,MAAO,eACPC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,GAElB,CACEJ,WAAY,OACZC,MAAO,YACPC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,GAElB,CACEJ,WAAY,aACZC,MAAO,YACPC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,GAElB,CACEJ,WAAY,SACZK,aAAeC,GACbC,cAAA,UACEC,QAASA,KAAMC,OArDDC,EAqDgBJ,EAAOI,UApD7CjB,QAAQkB,IAAID,GADUA,KAqD6B,EAC3CE,UAAU,GACVC,MAAO,CACLC,OAAQ,OACRC,QAAS,WACTC,WAAY,UACZC,MAAO,SACPC,SAEFX,cAACY,IAAU,CAACC,KAAM,UAK1B,IAGF,OACEb,cAAA,OAAKK,UAAU,kBAAkBC,MAAO,CAAEQ,OAAQ,QAASC,MAAO,QAASJ,SACzEX,cAACgB,cAAW,CACVzB,WAAYA,EACZ0B,QAASrD,EACTsD,YAAY,EACZC,mBAAoB,GACpBC,wBAAwB,EACxBC,yBAAyB,EACzBC,aAAa,EACbC,cAAe,CACb5B,UAAU,EACV6B,WAAW,EACX5B,QAAQ,MAGR,C","file":"static/js/25.52c37c07.chunk.js","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/styles/ag-grid.css\";\r\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\r\n\r\nconst ListOfBranches = () => {\r\n  const [listBranches, setListBranches] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const getAllStores = async () => {\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/FirmsBranches/GetAllByFirm`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization:\r\n            \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\"),\r\n        },\r\n        redirect: \"follow\",\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.SUCCESS === 1) {\r\n          setListBranches(result.DATA);\r\n        } else {\r\n          console.error(result.USER_MESSAGE);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to fetch:\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllStores();\r\n  }, []);\r\n\r\n  const navigateToEdit = (data) => {\r\n    console.log(data);\r\n    // navigate(\"/MainDashboard/AddStoreLocation/\", { state: { data: data } });\r\n  };\r\n\r\n  const columnDefs = useMemo(\r\n    () => [\r\n      {\r\n        headerName: \"Branch ID\",\r\n        field: \"id\",\r\n        sortable: true,\r\n        filter: true,\r\n        floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"Branch Name\",\r\n        field: \"label\",\r\n        sortable: true,\r\n        filter: true,\r\n        floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"Manager Name\",\r\n        field: \"managerLabel\",\r\n        sortable: true,\r\n        filter: true,\r\n        floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"Country\",\r\n        field: \"countryLabel\",\r\n        sortable: true,\r\n        filter: true,\r\n        floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"City\",\r\n        field: \"cityLabel\",\r\n        sortable: true,\r\n        filter: true,\r\n        floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"Contact No\",\r\n        field: \"contactNo\",\r\n        sortable: true,\r\n        filter: true,\r\n        floatingFilter: true,\r\n      },\r\n      {\r\n        headerName: \"Action\",\r\n        cellRenderer: (params) => (\r\n          <button\r\n            onClick={() => navigateToEdit(params.data)}\r\n            className=\"\"\r\n            style={{\r\n              border: \"none\",\r\n              padding: \"0px 14px\",\r\n              background: \"#10a945\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <MdModeEdit size={20} />\r\n          </button>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"ag-theme-quartz\" style={{ height: \"500px\", width: \"100%\" }}>\r\n      <AgGridReact\r\n        columnDefs={columnDefs}\r\n        rowData={listBranches}\r\n        pagination={true}\r\n        paginationPageSize={10}\r\n        paginationAutoPageSize={true}\r\n        suppressPaginationPanel={true}\r\n        animateRows={true}\r\n        defaultColDef={{\r\n          sortable: true,\r\n          resizable: true,\r\n          filter: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListOfBranches;\r\n"],"sourceRoot":""}