{"version":3,"sources":["views/pages/FirmManagment/FirmManagement.js"],"names":["AddEmployee","parms","useParams","id","parseInt","isNaN","t","useTranslation","businessType","setBusinessType","useState","state","setState","label","businesstypeId","webUrl","totalBranches","totalEmployees","handleChange","e","target","name","value","useEffect","async","myHeaders","Headers","append","window","localStorage","getItem","requestOptions","method","headers","body","FormData","redirect","fetch","concat","process","then","response","json","result","SUCCESS","data","DATA","businessTypeId","catch","error","console","log","getCompanyData","getBusinessTypes","_jsx","Fragment","children","_jsxs","Form","onSubmit","formdata","document","getElementById","saveCompany","Row","Col","md","className","Label","Input","onChange","type","length","map","obj","index","Button","color","outline"],"mappings":"uHAAA,kEAgPeA,UApOKA,KAChB,IAAIC,EAAQC,cACRC,EAAKC,SAASH,EAAME,IACpBE,MAAMF,KAAKA,EAAK,GACpB,MAAM,EAAEG,GAAMC,eACPC,EAAaC,GAAkBC,mBAAS,KAGxCC,EAAOC,GAAYF,mBAAS,CACjCG,MAAO,GACPC,eAAgB,KAChBC,OAAQ,GACRC,cAAe,GACfC,eAAgB,KAEdC,EAAgBC,IACpBP,EAAS,IAAKD,EAAO,CAACQ,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,OAAQ,EAyIzD,OALAC,qBAAU,KA3FaC,WAGrB,IAAIC,EAAY,IAAIC,QACpBD,EAAUE,OACR,gBACA,UAAYC,OAAOC,aAAaC,QAAQ,mBAG1C,IAEIC,EAAiB,CACnBC,OAAQ,OACRC,QAASR,EACTS,KALa,IAAIC,SAMjBC,SAAU,gBAGNC,MAAM,GAADC,OACNC,2BAAgCD,OAAGC,OAAkC,oBACxER,GAECS,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACL,GAAuB,IAAnBA,EAAOC,QAAe,CACxB,IAAIC,EAAOF,EAAOG,KACdD,GACFjC,EAAS,CACPC,MAAOgC,EAAKhC,MACZE,OAAQ8B,EAAK9B,OACjBC,cAAe6B,EAAK7B,cACpBC,eAAe4B,EAAK5B,eAChBH,eAAe+B,EAAKE,gBAG1B,CACA,IAGDC,OAAOC,IACNC,QAAQC,IAAI,QAASF,EAAM,GAK3B,EA+CJG,GAnIuB5B,WAEvB,IAAIC,EAAY,IAAIC,QACpBD,EAAUE,OACR,gBACA,UAAYC,OAAOC,aAAaC,QAAQ,mBAG1C,IAEIC,EAAiB,CACnBC,OAAQ,OACRC,QAASR,EACTS,KALa,IAAIC,SAMjBC,SAAU,gBAGNC,MAAM,GAADC,OACNC,2BAAgCD,OAAGC,OAAkC,mCACxER,GAECS,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACkB,IAAnBA,EAAOC,SACTnC,EAAiBkC,EAAOG,KAE1B,IAGDE,OAAOC,IACNC,QAAQC,IAAI,QAASF,EAAM,GAK3B,EAiGJI,EAAkB,GACjB,IAILC,cAACC,WAAQ,CAAAC,SACTC,eAACC,IAAI,CAACvD,GAAG,cAAcwD,SAAUA,IAlDXnC,WAGlB,IAAIC,EAAY,IAAIC,QACpBD,EAAUE,OACR,gBACA,UAAYC,OAAOC,aAAaC,QAAQ,mBAG1C,IAAI8B,EAAW,IAAIzB,SAAS0B,SAASC,eAAe,gBACpDF,EAASjC,OAAO,SAAU,KAE1B,IAAII,EAAiB,CACnBC,OAAQ,OACRC,QAASR,EACTS,KAAM0B,EACNxB,SAAU,gBAGNC,MAAM,GAADC,OACNC,2BAAgCD,OAAGC,OAAkC,eACxER,GAECS,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACLO,QAAQC,IAAI,SAAUR,GAClBA,EAAOC,OAMX,IAGDI,OAAOC,IACLC,QAAQC,IAAI,QAASF,EAAM,GAE9B,EAYiCc,GAAcP,SAAA,CAGjDC,eAACO,IAAG,CAAAR,SAAA,CACNC,eAACQ,IAAG,CAACC,GAAG,IAAIC,UAAU,OAAMX,SAAA,CACxBF,cAACc,IAAK,CAACD,UAAU,aAAYX,SAC1BlD,EAAE,gBAELgD,cAACe,IAAK,CACJlE,GAAG,QACHkB,KAAK,QACLC,MAAOX,EAAME,MACbyD,SAAUpD,OAIduC,eAACQ,IAAG,CAACC,GAAG,IAAIC,UAAU,OAAMX,SAAA,CAC1BF,cAACc,IAAK,CAACD,UAAU,aAAYX,SAC1BlD,EAAE,mBAELmD,eAACY,IAAK,CACJE,KAAK,SACLlD,KAAK,iBACLlB,GAAG,iBACHmB,MAAOX,EAAMG,eACbwD,SAAUpD,EAAasC,SAAA,CAEvBF,cAAA,aACD9C,GAAgBA,EAAagE,OAAS,EACnChE,EAAaiE,KAAI,CAACC,EAAKC,IACrBrB,cAAA,UAAQhC,MAAOoD,EAAIvE,GAAGqD,SAAekB,EAAI7D,OAAb6D,EAAIvE,MAElC,WAGNsD,eAACQ,IAAG,CAACC,GAAG,IAAIC,UAAU,OAAMX,SAAA,CAC1BF,cAACc,IAAK,CAACD,UAAU,aAAYX,SAC1BlD,EAAE,iBAELgD,cAACe,IAAK,CACJlE,GAAG,SACHkB,KAAK,SACLC,MAAOX,EAAMI,OACbuD,SAAUpD,UAQhBuC,eAAA,OAAKU,UAAU,6BAA4BX,SAAA,CACzCF,cAACsB,IAAM,CAACC,MAAM,YAAYV,UAAU,kBAAkBW,SAAO,EAAAtB,SAE3DF,cAAA,QAAMa,UAAU,wCAAuCX,SAAC,WAI1DF,cAACsB,IAAM,CACPL,KAAK,SACHM,MAAM,UACNV,UAAU,WACZX,SAEEF,cAAA,QAAMa,UAAU,wCAAuCX,SAAC,kBAKnD,C","file":"static/js/16.6e9ae995.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useState,useEffect, useRef, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Alert } from \"reactstrap\";\r\nimport \"@styles/react/apps/app-users.scss\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Flatpickr from 'react-flatpickr'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { Label, Row, Col, Form, Input, Button } from \"reactstrap\";\r\n\r\n\r\nconst AddEmployee = () => {\r\n    let parms = useParams();\r\n    let id = parseInt(parms.id);\r\n    if (isNaN(id)) id = 0;\r\n    const { t } = useTranslation();\r\n    const [businessType,setBusinessType] =useState([]);\r\n\r\n\r\n    const [state, setState] = useState({\r\n      label: \"\",\r\n      businesstypeId: null,\r\n      webUrl: \"\",\r\n      totalBranches: \"\",\r\n      totalEmployees: \"\",\r\n    });\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n  const getBusinessTypes = async () => {\r\n    // setIsLoading(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData();\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Firms/GetBusinessTypesDropdown`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.SUCCESS === 1) {\r\n          setBusinessType( result.DATA );\r\n        } else {\r\n        //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        // handleOpenSnackbar(\r\n        //   \"Failed to fetch ! Please try Again later.\",\r\n        //   \"error\"\r\n        // );\r\n      });\r\n    // setIsLoading(false);\r\n\r\n  };\r\n  const getCompanyData = async () => {\r\n    // setIsLoading(true);\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData();\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Firms/GetByUser`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.SUCCESS === 1) {\r\n          let data = result.DATA;\r\n          if (data) {\r\n            setState({\r\n              label: data.label,\r\n              webUrl: data.webUrl,\r\n\t\t\t\t      totalBranches: data.totalBranches,\r\n\t\t\t\t      totalEmployees:data.totalEmployees,\r\n              businesstypeId:data.businessTypeId,\r\n            });\r\n          }\r\n        } else {\r\n        //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        // handleOpenSnackbar(\r\n        //   \"Failed to fetch ! Please try Again later.\",\r\n        //   \"error\"\r\n        // );\r\n      });\r\n    // setIsLoading(false);\r\n\r\n  };\r\n  const saveCompany = async ()  => {\r\n    // setIsLoading(true);\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + window.localStorage.getItem(\"AtouBeatXToken\")\r\n    );\r\n\r\n    var formdata = new FormData(document.getElementById(\"companydata\"));\r\n    formdata.append(\"firmId\", \"1\");\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    await fetch(\r\n      `${process.env.REACT_APP_API_DOMAIN}${process.env.REACT_APP_SUB_API_NAME}/Firms/Save`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(\"result\", result);\r\n        if (result.SUCCESS === 1) {\r\n          // setState({ ...state, companyData: result.DATA });\r\n\r\n          // console.log(state.companyData);\r\n        //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"success\");\r\n        } else {\r\n        //   handleOpenSnackbar(<span>{result.USER_MESSAGE}</span>, \"error\");\r\n        }\r\n      })\r\n      .catch((error) =>{\r\n         console.log(\"error\", error)\r\n        //  handleOpenSnackbar(\"Failed to fetch ! Please try Again later.\", \"error\");\r\n    });\r\n    // setIsLoading(false);\r\n\r\n  };\r\n  useEffect(() => {\r\n    getCompanyData()\r\n    getBusinessTypes();\r\n  }, []);\r\n\r\n  return  (\r\n\r\n<Fragment>\r\n<Form id=\"companydata\" onSubmit={() => saveCompany()}>\r\n \r\n \r\n    <Row>\r\n  <Col md=\"4\" className=\"mb-1\">\r\n      <Label className=\"form-label\" >\r\n        {t(\"Firm Label\")}\r\n      </Label>\r\n      <Input\r\n        id=\"label\"\r\n        name=\"label\"\r\n        value={state.label}\r\n        onChange={handleChange}\r\n       \r\n      />\r\n    </Col>\r\n    <Col md=\"4\" className=\"mb-1\">\r\n      <Label className=\"form-label\" >\r\n        {t(\"Business Type\")}\r\n      </Label>\r\n      <Input\r\n        type=\"select\"\r\n        name=\"businessTypeId\"\r\n        id=\"businessTypeId\"\r\n        value={state.businesstypeId}\r\n        onChange={handleChange}\r\n      >\r\n        <option></option>\r\n      {businessType && businessType.length > 0\r\n        ? businessType.map((obj, index) => (\r\n            <option value={obj.id} key={obj.id}>{obj.label}</option>\r\n          ))\r\n        : null}\r\n      </Input>\r\n    </Col>\r\n    <Col md=\"4\" className=\"mb-1\">\r\n      <Label className=\"form-label\" >\r\n        {t(\"Website URL\")}\r\n      </Label>\r\n      <Input\r\n        id=\"webUrl\"\r\n        name=\"webUrl\"\r\n        value={state.webUrl}\r\n        onChange={handleChange}\r\n       \r\n      />\r\n    </Col>\r\n  </Row>\r\n\r\n\r\n\r\n  <div className=\"d-flex justify-content-end\">\r\n    <Button color=\"secondary\" className=\"btn-prev d-none\" outline >\r\n     \r\n      <span className=\"align-middle d-sm-inline-block d-none\">\r\n       View\r\n      </span>\r\n    </Button>\r\n    <Button\r\n    type=\"submit\"\r\n      color=\"primary\"\r\n      className=\"btn-next\"\r\n    //   onClick={}\r\n    >\r\n      <span className=\"align-middle d-sm-inline-block d-none\">Save</span>\r\n     \r\n    </Button>\r\n  </div>\r\n</Form>\r\n</Fragment>\r\n  );\r\n};\r\nexport default AddEmployee;\r\n"],"sourceRoot":""}